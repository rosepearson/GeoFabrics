Search.setIndex({"alltitles": {"API Reference": [[9, "api-reference"]], "Attributes": [[3, "attributes"]], "Classes": [[2, "classes"], [3, "classes"], [4, "classes"], [6, "classes"]], "Functions": [[0, "functions"], [1, "functions"], [2, "functions"], [3, "functions"], [7, "functions"]], "Indices and tables": [[10, "indices-and-tables"]], "Module Contents": [[0, "module-contents"], [1, "module-contents"], [2, "module-contents"], [3, "module-contents"], [4, "module-contents"], [6, "module-contents"], [7, "module-contents"]], "Submodules": [[5, "submodules"]], "Welcome to Geofabrics\u2019s documentation!": [[10, "welcome-to-geofabrics-s-documentation"]], "benchmarking": [[0, "module-benchmarking"]], "geofabrics": [[5, "module-geofabrics"]], "geofabrics.__main__": [[1, "module-geofabrics.__main__"]], "geofabrics.bathymetry_estimation": [[2, "module-geofabrics.bathymetry_estimation"]], "geofabrics.dem": [[3, "module-geofabrics.dem"]], "geofabrics.geometry": [[4, "module-geofabrics.geometry"]], "geofabrics.processor": [[6, "module-geofabrics.processor"]], "geofabrics.runner": [[7, "module-geofabrics.runner"]], "geofabrics.version": [[8, "module-geofabrics.version"]]}, "docnames": ["autoapi/benchmarking/index", "autoapi/geofabrics/__main__/index", "autoapi/geofabrics/bathymetry_estimation/index", "autoapi/geofabrics/dem/index", "autoapi/geofabrics/geometry/index", "autoapi/geofabrics/index", "autoapi/geofabrics/processor/index", "autoapi/geofabrics/runner/index", "autoapi/geofabrics/version/index", "autoapi/index", "index"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["autoapi/benchmarking/index.rst", "autoapi/geofabrics/__main__/index.rst", "autoapi/geofabrics/bathymetry_estimation/index.rst", "autoapi/geofabrics/dem/index.rst", "autoapi/geofabrics/geometry/index.rst", "autoapi/geofabrics/index.rst", "autoapi/geofabrics/processor/index.rst", "autoapi/geofabrics/runner/index.rst", "autoapi/geofabrics/version/index.rst", "autoapi/index.rst", "index.rst"], "indexentries": {"__del__() (geofabrics.dem.coarsedem method)": [[3, "geofabrics.dem.CoarseDem.__del__", false]], "__del__() (geofabrics.dem.hydrologicallyconditioneddem method)": [[3, "geofabrics.dem.HydrologicallyConditionedDem.__del__", false]], "__del__() (geofabrics.dem.lidarbase method)": [[3, "geofabrics.dem.LidarBase.__del__", false]], "add_bathymetry() (geofabrics.processor.hydrologicdemgenerator method)": [[6, "geofabrics.processor.HydrologicDemGenerator.add_bathymetry", false]], "add_coarse_dem() (geofabrics.dem.rawdem method)": [[3, "geofabrics.dem.RawDem.add_coarse_dem", false]], "add_lidar() (geofabrics.dem.lidarbase method)": [[3, "geofabrics.dem.LidarBase.add_lidar", false]], "add_lidar() (geofabrics.dem.rawdem method)": [[3, "geofabrics.dem.RawDem.add_lidar", false]], "add_lidar() (geofabrics.dem.roughnessdem method)": [[3, "geofabrics.dem.RoughnessDem.add_lidar", false]], "align_channel() (geofabrics.bathymetry_estimation.channelcharacteristics method)": [[2, "geofabrics.bathymetry_estimation.ChannelCharacteristics.align_channel", false]], "align_channel() (geofabrics.processor.riverbathymetrygenerator method)": [[6, "geofabrics.processor.RiverBathymetryGenerator.align_channel", false]], "align_channel_from_osm() (geofabrics.processor.riverbathymetrygenerator method)": [[6, "geofabrics.processor.RiverBathymetryGenerator.align_channel_from_osm", false]], "align_channel_from_rec() (geofabrics.processor.riverbathymetrygenerator method)": [[6, "geofabrics.processor.RiverBathymetryGenerator.align_channel_from_rec", false]], "alignment_exists() (geofabrics.processor.riverbathymetrygenerator method)": [[6, "geofabrics.processor.RiverBathymetryGenerator.alignment_exists", false]], "bank_height_points() (geofabrics.geometry.estimatedbathymetrypoints method)": [[4, "geofabrics.geometry.EstimatedBathymetryPoints.bank_height_points", false]], "bank_heights_exist() (geofabrics.geometry.estimatedbathymetrypoints method)": [[4, "geofabrics.geometry.EstimatedBathymetryPoints.bank_heights_exist", false]], "baseprocessor (class in geofabrics.processor)": [[6, "geofabrics.processor.BaseProcessor", false]], "bathymetrycontours (class in geofabrics.geometry)": [[4, "geofabrics.geometry.BathymetryContours", false]], "benchmark_processing() (in module benchmarking)": [[0, "benchmarking.benchmark_processing", false]], "benchmarking": [[0, "module-benchmarking", false]], "calculate_channel_characteristics() (geofabrics.processor.riverbathymetrygenerator method)": [[6, "geofabrics.processor.RiverBathymetryGenerator.calculate_channel_characteristics", false]], "calculate_dem_bounds() (geofabrics.dem.coarsedem method)": [[3, "geofabrics.dem.CoarseDem.calculate_dem_bounds", false]], "calculate_idw() (in module geofabrics.dem)": [[3, "geofabrics.dem.calculate_idw", false]], "calculate_linear() (in module geofabrics.dem)": [[3, "geofabrics.dem.calculate_linear", false]], "calculate_min_z_start_i() (geofabrics.bathymetry_estimation.channelcharacteristics method)": [[2, "geofabrics.bathymetry_estimation.ChannelCharacteristics.calculate_min_z_start_i", false]], "calculate_min_z_stop_i() (geofabrics.bathymetry_estimation.channelcharacteristics method)": [[2, "geofabrics.bathymetry_estimation.ChannelCharacteristics.calculate_min_z_stop_i", false]], "calculate_river_bed_elevations() (geofabrics.processor.riverbathymetrygenerator method)": [[6, "geofabrics.processor.RiverBathymetryGenerator.calculate_river_bed_elevations", false]], "catchment (geofabrics.geometry.catchmentgeometry property)": [[4, "geofabrics.geometry.CatchmentGeometry.catchment", false]], "catchmentgeometry (class in geofabrics.geometry)": [[4, "geofabrics.geometry.CatchmentGeometry", false]], "centre_index (geofabrics.bathymetry_estimation.channelcharacteristics property)": [[2, "geofabrics.bathymetry_estimation.ChannelCharacteristics.centre_index", false]], "channel (class in geofabrics.bathymetry_estimation)": [[2, "geofabrics.bathymetry_estimation.Channel", false]], "channel_bathymetry_exist() (geofabrics.processor.riverbathymetrygenerator method)": [[6, "geofabrics.processor.RiverBathymetryGenerator.channel_bathymetry_exist", false]], "channel_characteristics_exist() (geofabrics.processor.riverbathymetrygenerator method)": [[6, "geofabrics.processor.RiverBathymetryGenerator.channel_characteristics_exist", false]], "channelcharacteristics (class in geofabrics.bathymetry_estimation)": [[2, "geofabrics.bathymetry_estimation.ChannelCharacteristics", false]], "characterise_channel() (geofabrics.processor.riverbathymetrygenerator method)": [[6, "geofabrics.processor.RiverBathymetryGenerator.characterise_channel", false]], "check_datasets() (geofabrics.processor.baseprocessor method)": [[6, "geofabrics.processor.BaseProcessor.check_datasets", false]], "check_instruction_path() (geofabrics.processor.baseprocessor method)": [[6, "geofabrics.processor.BaseProcessor.check_instruction_path", false]], "check_valid_inputs() (geofabrics.bathymetry_estimation.interpolatemeasuredelevations method)": [[2, "geofabrics.bathymetry_estimation.InterpolateMeasuredElevations.check_valid_inputs", false]], "check_vector_or_raster() (geofabrics.processor.baseprocessor method)": [[6, "geofabrics.processor.BaseProcessor.check_vector_or_raster", false]], "chunk_coarse_dem() (in module geofabrics.dem)": [[3, "geofabrics.dem.chunk_coarse_dem", false]], "cli_run_from_dict() (in module geofabrics.__main__)": [[1, "geofabrics.__main__.cli_run_from_dict", false]], "cli_run_from_file() (in module geofabrics.__main__)": [[1, "geofabrics.__main__.cli_run_from_file", false]], "clip_lidar() (geofabrics.dem.rawdem method)": [[3, "geofabrics.dem.RawDem.clip_lidar", false]], "coarsedem (class in geofabrics.dem)": [[3, "geofabrics.dem.CoarseDem", false]], "config_logging() (in module geofabrics.runner)": [[7, "geofabrics.runner.config_logging", false]], "create_dem() (geofabrics.processor.waterwaybedelevationestimator method)": [[6, "geofabrics.processor.WaterwayBedElevationEstimator.create_dem", false]], "create_metadata() (geofabrics.processor.baseprocessor method)": [[6, "geofabrics.processor.BaseProcessor.create_metadata", false]], "create_results_folder() (geofabrics.processor.baseprocessor method)": [[6, "geofabrics.processor.BaseProcessor.create_results_folder", false]], "delayed_chunk_coarse_dem (in module geofabrics.dem)": [[3, "geofabrics.dem.delayed_chunk_coarse_dem", false]], "delayed_elevation_over_chunk (in module geofabrics.dem)": [[3, "geofabrics.dem.delayed_elevation_over_chunk", false]], "delayed_roughness_over_chunk (in module geofabrics.dem)": [[3, "geofabrics.dem.delayed_roughness_over_chunk", false]], "dem (geofabrics.dem.coarsedem property)": [[3, "geofabrics.dem.CoarseDem.dem", false]], "dem (geofabrics.dem.dembase property)": [[3, "geofabrics.dem.DemBase.dem", false]], "dem (geofabrics.dem.hydrologicallyconditioneddem property)": [[3, "geofabrics.dem.HydrologicallyConditionedDem.dem", false]], "dem (geofabrics.dem.lidarbase property)": [[3, "geofabrics.dem.LidarBase.dem", false]], "dembase (class in geofabrics.dem)": [[3, "geofabrics.dem.DemBase", false]], "download_osm_values() (geofabrics.processor.waterwaybedelevationestimator method)": [[6, "geofabrics.processor.WaterwayBedElevationEstimator.download_osm_values", false]], "elevation_from_points() (in module geofabrics.dem)": [[3, "geofabrics.dem.elevation_from_points", false]], "elevation_over_chunk() (in module geofabrics.dem)": [[3, "geofabrics.dem.elevation_over_chunk", false]], "empty (geofabrics.dem.coarsedem property)": [[3, "geofabrics.dem.CoarseDem.empty", false]], "estimate_closed_elevations() (geofabrics.processor.waterwaybedelevationestimator method)": [[6, "geofabrics.processor.WaterwayBedElevationEstimator.estimate_closed_elevations", false]], "estimate_open_elevations() (geofabrics.processor.waterwaybedelevationestimator method)": [[6, "geofabrics.processor.WaterwayBedElevationEstimator.estimate_open_elevations", false]], "estimate_river_mouth_fan() (geofabrics.processor.measuredrivergenerator method)": [[6, "geofabrics.processor.MeasuredRiverGenerator.estimate_river_mouth_fan", false]], "estimate_river_mouth_fan() (geofabrics.processor.riverbathymetrygenerator method)": [[6, "geofabrics.processor.RiverBathymetryGenerator.estimate_river_mouth_fan", false]], "estimate_width_and_slope() (geofabrics.bathymetry_estimation.channelcharacteristics method)": [[2, "geofabrics.bathymetry_estimation.ChannelCharacteristics.estimate_width_and_slope", false]], "estimatedbathymetrypoints (class in geofabrics.geometry)": [[4, "geofabrics.geometry.EstimatedBathymetryPoints", false]], "extents (geofabrics.dem.coarsedem property)": [[3, "geofabrics.dem.CoarseDem.extents", false]], "fixed_threshold_width() (geofabrics.bathymetry_estimation.channelcharacteristics method)": [[2, "geofabrics.bathymetry_estimation.ChannelCharacteristics.fixed_threshold_width", false]], "fixed_threshold_width_backwards() (geofabrics.bathymetry_estimation.channelcharacteristics method)": [[2, "geofabrics.bathymetry_estimation.ChannelCharacteristics.fixed_threshold_width_backwards", false]], "fixed_threshold_width_forwards() (geofabrics.bathymetry_estimation.channelcharacteristics method)": [[2, "geofabrics.bathymetry_estimation.ChannelCharacteristics.fixed_threshold_width_forwards", false]], "fixed_threshold_width_outwards() (geofabrics.bathymetry_estimation.channelcharacteristics method)": [[2, "geofabrics.bathymetry_estimation.ChannelCharacteristics.fixed_threshold_width_outwards", false]], "fixed_thresholded_widths_from_centre_within_radius() (geofabrics.bathymetry_estimation.channelcharacteristics method)": [[2, "geofabrics.bathymetry_estimation.ChannelCharacteristics.fixed_thresholded_widths_from_centre_within_radius", false]], "foreshore (geofabrics.geometry.catchmentgeometry property)": [[4, "geofabrics.geometry.CatchmentGeometry.foreshore", false]], "foreshore_and_offshore (geofabrics.geometry.catchmentgeometry property)": [[4, "geofabrics.geometry.CatchmentGeometry.foreshore_and_offshore", false]], "from_instructions_dict() (in module geofabrics.runner)": [[7, "geofabrics.runner.from_instructions_dict", false]], "from_instructions_file() (in module geofabrics.runner)": [[7, "geofabrics.runner.from_instructions_file", false]], "from_network() (geofabrics.bathymetry_estimation.channel class method)": [[2, "geofabrics.bathymetry_estimation.Channel.from_network", false]], "full_land (geofabrics.geometry.catchmentgeometry property)": [[4, "geofabrics.geometry.CatchmentGeometry.full_land", false]], "geofabrics": [[5, "module-geofabrics", false]], "geofabrics.__main__": [[1, "module-geofabrics.__main__", false]], "geofabrics.bathymetry_estimation": [[2, "module-geofabrics.bathymetry_estimation", false]], "geofabrics.dem": [[3, "module-geofabrics.dem", false]], "geofabrics.geometry": [[4, "module-geofabrics.geometry", false]], "geofabrics.processor": [[6, "module-geofabrics.processor", false]], "geofabrics.runner": [[7, "module-geofabrics.runner", false]], "geofabrics.version": [[8, "module-geofabrics.version", false]], "get_b_spline_fit() (geofabrics.bathymetry_estimation.channel method)": [[2, "geofabrics.bathymetry_estimation.Channel.get_b_spline_fit", false]], "get_b_spline_fit_points() (geofabrics.bathymetry_estimation.channel method)": [[2, "geofabrics.bathymetry_estimation.Channel.get_b_spline_fit_points", false]], "get_bathymetry_instruction() (geofabrics.processor.riverbathymetrygenerator method)": [[6, "geofabrics.processor.RiverBathymetryGenerator.get_bathymetry_instruction", false]], "get_channel_catchment() (geofabrics.bathymetry_estimation.channel method)": [[2, "geofabrics.bathymetry_estimation.Channel.get_channel_catchment", false]], "get_crs() (geofabrics.processor.baseprocessor method)": [[6, "geofabrics.processor.BaseProcessor.get_crs", false]], "get_dems() (geofabrics.processor.riverbathymetrygenerator method)": [[6, "geofabrics.processor.RiverBathymetryGenerator.get_dems", false]], "get_instruction_general() (geofabrics.processor.baseprocessor method)": [[6, "geofabrics.processor.BaseProcessor.get_instruction_general", false]], "get_instruction_path() (geofabrics.processor.baseprocessor method)": [[6, "geofabrics.processor.BaseProcessor.get_instruction_path", false]], "get_lidar_dataset_crs() (geofabrics.processor.baseprocessor method)": [[6, "geofabrics.processor.BaseProcessor.get_lidar_dataset_crs", false]], "get_lidar_datasets_info() (geofabrics.processor.baseprocessor method)": [[6, "geofabrics.processor.BaseProcessor.get_lidar_datasets_info", false]], "get_measured_instruction() (geofabrics.processor.measuredrivergenerator method)": [[6, "geofabrics.processor.MeasuredRiverGenerator.get_measured_instruction", false]], "get_network_channel() (geofabrics.processor.riverbathymetrygenerator method)": [[6, "geofabrics.processor.RiverBathymetryGenerator.get_network_channel", false]], "get_parametric_spline_fit() (geofabrics.bathymetry_estimation.channel method)": [[2, "geofabrics.bathymetry_estimation.Channel.get_parametric_spline_fit", false]], "get_parametric_spline_fit_points() (geofabrics.bathymetry_estimation.channel method)": [[2, "geofabrics.bathymetry_estimation.Channel.get_parametric_spline_fit_points", false]], "get_processing_instructions() (geofabrics.processor.baseprocessor method)": [[6, "geofabrics.processor.BaseProcessor.get_processing_instructions", false]], "get_resolution() (geofabrics.processor.baseprocessor method)": [[6, "geofabrics.processor.BaseProcessor.get_resolution", false]], "get_result_file_name() (geofabrics.processor.riverbathymetrygenerator method)": [[6, "geofabrics.processor.RiverBathymetryGenerator.get_result_file_name", false]], "get_result_file_name() (geofabrics.processor.waterwaybedelevationestimator method)": [[6, "geofabrics.processor.WaterwayBedElevationEstimator.get_result_file_name", false]], "get_result_file_path() (geofabrics.processor.riverbathymetrygenerator method)": [[6, "geofabrics.processor.RiverBathymetryGenerator.get_result_file_path", false]], "get_result_file_path() (geofabrics.processor.waterwaybedelevationestimator method)": [[6, "geofabrics.processor.WaterwayBedElevationEstimator.get_result_file_path", false]], "get_roughness_instruction() (geofabrics.processor.roughnesslengthgenerator method)": [[6, "geofabrics.processor.RoughnessLengthGenerator.get_roughness_instruction", false]], "get_spaced_points() (geofabrics.bathymetry_estimation.channel method)": [[2, "geofabrics.bathymetry_estimation.Channel.get_spaced_points", false]], "get_spaced_points_with_corners() (geofabrics.bathymetry_estimation.channel method)": [[2, "geofabrics.bathymetry_estimation.Channel.get_spaced_points_with_corners", false]], "get_vector_or_raster_paths() (geofabrics.processor.baseprocessor method)": [[6, "geofabrics.processor.BaseProcessor.get_vector_or_raster_paths", false]], "hydrologicallyconditioneddem (class in geofabrics.dem)": [[3, "geofabrics.dem.HydrologicallyConditionedDem", false]], "hydrologicdemgenerator (class in geofabrics.processor)": [[6, "geofabrics.processor.HydrologicDemGenerator", false]], "interpolate() (geofabrics.bathymetry_estimation.interpolatemeasuredelevations method)": [[2, "geofabrics.bathymetry_estimation.InterpolateMeasuredElevations.interpolate", false]], "interpolate_ocean_bathymetry() (geofabrics.dem.hydrologicallyconditioneddem method)": [[3, "geofabrics.dem.HydrologicallyConditionedDem.interpolate_ocean_bathymetry", false]], "interpolate_rivers() (geofabrics.dem.hydrologicallyconditioneddem method)": [[3, "geofabrics.dem.HydrologicallyConditionedDem.interpolate_rivers", false]], "interpolate_waterways() (geofabrics.dem.hydrologicallyconditioneddem method)": [[3, "geofabrics.dem.HydrologicallyConditionedDem.interpolate_waterways", false]], "interpolatemeasuredelevations (class in geofabrics.bathymetry_estimation)": [[2, "geofabrics.bathymetry_estimation.InterpolateMeasuredElevations", false]], "land (geofabrics.geometry.catchmentgeometry property)": [[4, "geofabrics.geometry.CatchmentGeometry.land", false]], "land_and_foreshore (geofabrics.geometry.catchmentgeometry property)": [[4, "geofabrics.geometry.CatchmentGeometry.land_and_foreshore", false]], "land_and_foreshore_without_lidar() (geofabrics.geometry.catchmentgeometry method)": [[4, "geofabrics.geometry.CatchmentGeometry.land_and_foreshore_without_lidar", false]], "lidarbase (class in geofabrics.dem)": [[3, "geofabrics.dem.LidarBase", false]], "load_tiles_in_chunk() (in module geofabrics.dem)": [[3, "geofabrics.dem.load_tiles_in_chunk", false]], "main() (in module benchmarking)": [[0, "benchmarking.main", false]], "marinebathymetrypoints (class in geofabrics.geometry)": [[4, "geofabrics.geometry.MarineBathymetryPoints", false]], "measuredrivergenerator (class in geofabrics.processor)": [[6, "geofabrics.processor.MeasuredRiverGenerator", false]], "merge_dicts() (in module geofabrics.runner)": [[7, "geofabrics.runner.merge_dicts", false]], "minimum_elevation_in_polygon() (geofabrics.processor.waterwaybedelevationestimator method)": [[6, "geofabrics.processor.WaterwayBedElevationEstimator.minimum_elevation_in_polygon", false]], "module": [[0, "module-benchmarking", false], [1, "module-geofabrics.__main__", false], [2, "module-geofabrics.bathymetry_estimation", false], [3, "module-geofabrics.dem", false], [4, "module-geofabrics.geometry", false], [5, "module-geofabrics", false], [6, "module-geofabrics.processor", false], [7, "module-geofabrics.runner", false], [8, "module-geofabrics.version", false]], "no_values_mask (geofabrics.dem.rawdem property)": [[3, "geofabrics.dem.RawDem.no_values_mask", false]], "node_centred_reach_cross_section() (in module geofabrics.bathymetry_estimation)": [[2, "geofabrics.bathymetry_estimation.node_centred_reach_cross_section", false]], "number_of_samples (geofabrics.bathymetry_estimation.channelcharacteristics property)": [[2, "geofabrics.bathymetry_estimation.ChannelCharacteristics.number_of_samples", false]], "offshore (geofabrics.geometry.catchmentgeometry property)": [[4, "geofabrics.geometry.CatchmentGeometry.offshore", false]], "offshore_dense_data_edge() (geofabrics.geometry.catchmentgeometry method)": [[4, "geofabrics.geometry.CatchmentGeometry.offshore_dense_data_edge", false]], "offshore_no_dense_data() (geofabrics.geometry.catchmentgeometry method)": [[4, "geofabrics.geometry.CatchmentGeometry.offshore_no_dense_data", false]], "offshore_without_lidar() (geofabrics.geometry.catchmentgeometry method)": [[4, "geofabrics.geometry.CatchmentGeometry.offshore_without_lidar", false]], "parse_args() (in module benchmarking)": [[0, "benchmarking.parse_args", false]], "parse_args() (in module geofabrics.__main__)": [[1, "geofabrics.__main__.parse_args", false]], "points (geofabrics.dem.coarsedem property)": [[3, "geofabrics.dem.CoarseDem.points", false]], "points (geofabrics.geometry.estimatedbathymetrypoints property)": [[4, "geofabrics.geometry.EstimatedBathymetryPoints.points", false]], "points (geofabrics.geometry.marinebathymetrypoints property)": [[4, "geofabrics.geometry.MarineBathymetryPoints.points", false]], "points_array (geofabrics.geometry.estimatedbathymetrypoints property)": [[4, "geofabrics.geometry.EstimatedBathymetryPoints.points_array", false]], "polygon_and_bathymetry() (geofabrics.geometry.rivermouthfan method)": [[4, "geofabrics.geometry.RiverMouthFan.polygon_and_bathymetry", false]], "polygons (geofabrics.geometry.estimatedbathymetrypoints property)": [[4, "geofabrics.geometry.EstimatedBathymetryPoints.polygons", false]], "raw_extents (geofabrics.dem.hydrologicallyconditioneddem property)": [[3, "geofabrics.dem.HydrologicallyConditionedDem.raw_extents", false]], "rawdem (class in geofabrics.dem)": [[3, "geofabrics.dem.RawDem", false]], "rawlidardemgenerator (class in geofabrics.processor)": [[6, "geofabrics.processor.RawLidarDemGenerator", false]], "read_file_with_pdal() (in module geofabrics.dem)": [[3, "geofabrics.dem.read_file_with_pdal", false]], "resolution (geofabrics.dem.coarsedem property)": [[3, "geofabrics.dem.CoarseDem.resolution", false]], "riverbathymetrygenerator (class in geofabrics.processor)": [[6, "geofabrics.processor.RiverBathymetryGenerator", false]], "rivermouthfan (class in geofabrics.geometry)": [[4, "geofabrics.geometry.RiverMouthFan", false]], "roughness_from_points() (in module geofabrics.dem)": [[3, "geofabrics.dem.roughness_from_points", false]], "roughness_over_chunk() (in module geofabrics.dem)": [[3, "geofabrics.dem.roughness_over_chunk", false]], "roughnessdem (class in geofabrics.dem)": [[3, "geofabrics.dem.RoughnessDem", false]], "roughnesslengthgenerator (class in geofabrics.processor)": [[6, "geofabrics.processor.RoughnessLengthGenerator", false]], "run() (geofabrics.processor.baseprocessor method)": [[6, "geofabrics.processor.BaseProcessor.run", false]], "run() (geofabrics.processor.hydrologicdemgenerator method)": [[6, "geofabrics.processor.HydrologicDemGenerator.run", false]], "run() (geofabrics.processor.measuredrivergenerator method)": [[6, "geofabrics.processor.MeasuredRiverGenerator.run", false]], "run() (geofabrics.processor.rawlidardemgenerator method)": [[6, "geofabrics.processor.RawLidarDemGenerator.run", false]], "run() (geofabrics.processor.riverbathymetrygenerator method)": [[6, "geofabrics.processor.RiverBathymetryGenerator.run", false]], "run() (geofabrics.processor.roughnesslengthgenerator method)": [[6, "geofabrics.processor.RoughnessLengthGenerator.run", false]], "run() (geofabrics.processor.waterwaybedelevationestimator method)": [[6, "geofabrics.processor.WaterwayBedElevationEstimator.run", false]], "run_processor_class() (in module geofabrics.runner)": [[7, "geofabrics.runner.run_processor_class", false]], "sample_contours() (geofabrics.geometry.bathymetrycontours method)": [[4, "geofabrics.geometry.BathymetryContours.sample_contours", false]], "sample_cross_sections() (geofabrics.bathymetry_estimation.channelcharacteristics method)": [[2, "geofabrics.bathymetry_estimation.ChannelCharacteristics.sample_cross_sections", false]], "save_and_load_dem() (geofabrics.dem.lidarbase method)": [[3, "geofabrics.dem.LidarBase.save_and_load_dem", false]], "save_dem() (geofabrics.dem.dembase method)": [[3, "geofabrics.dem.DemBase.save_dem", false]], "setup_logging_for_run() (in module geofabrics.runner)": [[7, "geofabrics.runner.setup_logging_for_run", false]], "thalweg_centred_spacing() (geofabrics.bathymetry_estimation.interpolatemeasuredelevations method)": [[2, "geofabrics.bathymetry_estimation.InterpolateMeasuredElevations.thalweg_centred_spacing", false]], "thalweg_from_measured_centred_spacing() (geofabrics.bathymetry_estimation.interpolatemeasuredelevations method)": [[2, "geofabrics.bathymetry_estimation.InterpolateMeasuredElevations.thalweg_from_measured_centred_spacing", false]], "tile_names (geofabrics.geometry.tileinfo property)": [[4, "geofabrics.geometry.TileInfo.tile_names", false]], "tileinfo (class in geofabrics.geometry)": [[4, "geofabrics.geometry.TileInfo", false]], "uniform_spacing() (geofabrics.bathymetry_estimation.interpolatemeasuredelevations method)": [[2, "geofabrics.bathymetry_estimation.InterpolateMeasuredElevations.uniform_spacing", false]], "variable_thresholded_widths_from_centre_within_radius() (geofabrics.bathymetry_estimation.channelcharacteristics method)": [[2, "geofabrics.bathymetry_estimation.ChannelCharacteristics.variable_thresholded_widths_from_centre_within_radius", false]], "waterway_elevations_exists() (geofabrics.processor.waterwaybedelevationestimator method)": [[6, "geofabrics.processor.WaterwayBedElevationEstimator.waterway_elevations_exists", false]], "waterwaybedelevationestimator (class in geofabrics.processor)": [[6, "geofabrics.processor.WaterwayBedElevationEstimator", false]], "x (geofabrics.geometry.estimatedbathymetrypoints property)": [[4, "geofabrics.geometry.EstimatedBathymetryPoints.x", false]], "x (geofabrics.geometry.marinebathymetrypoints property)": [[4, "geofabrics.geometry.MarineBathymetryPoints.x", false]], "y (geofabrics.geometry.estimatedbathymetrypoints property)": [[4, "geofabrics.geometry.EstimatedBathymetryPoints.y", false]], "y (geofabrics.geometry.marinebathymetrypoints property)": [[4, "geofabrics.geometry.MarineBathymetryPoints.y", false]], "z (geofabrics.geometry.estimatedbathymetrypoints property)": [[4, "geofabrics.geometry.EstimatedBathymetryPoints.z", false]], "z (geofabrics.geometry.marinebathymetrypoints property)": [[4, "geofabrics.geometry.MarineBathymetryPoints.z", false]]}, "objects": {"": [[0, 0, 0, "-", "benchmarking"], [5, 0, 0, "-", "geofabrics"]], "benchmarking": [[0, 1, 1, "", "benchmark_processing"], [0, 1, 1, "", "main"], [0, 1, 1, "", "parse_args"]], "geofabrics": [[1, 0, 0, "-", "__main__"], [2, 0, 0, "-", "bathymetry_estimation"], [3, 0, 0, "-", "dem"], [4, 0, 0, "-", "geometry"], [6, 0, 0, "-", "processor"], [7, 0, 0, "-", "runner"], [8, 0, 0, "-", "version"]], "geofabrics.__main__": [[1, 1, 1, "", "cli_run_from_dict"], [1, 1, 1, "", "cli_run_from_file"], [1, 1, 1, "", "parse_args"]], "geofabrics.bathymetry_estimation": [[2, 2, 1, "", "Channel"], [2, 2, 1, "", "ChannelCharacteristics"], [2, 2, 1, "", "InterpolateMeasuredElevations"], [2, 1, 1, "", "node_centred_reach_cross_section"]], "geofabrics.bathymetry_estimation.Channel": [[2, 3, 1, "", "from_network"], [2, 3, 1, "", "get_b_spline_fit"], [2, 3, 1, "", "get_b_spline_fit_points"], [2, 3, 1, "", "get_channel_catchment"], [2, 3, 1, "", "get_parametric_spline_fit"], [2, 3, 1, "", "get_parametric_spline_fit_points"], [2, 3, 1, "", "get_spaced_points"], [2, 3, 1, "", "get_spaced_points_with_corners"]], "geofabrics.bathymetry_estimation.ChannelCharacteristics": [[2, 3, 1, "", "align_channel"], [2, 3, 1, "", "calculate_min_z_start_i"], [2, 3, 1, "", "calculate_min_z_stop_i"], [2, 4, 1, "", "centre_index"], [2, 3, 1, "", "estimate_width_and_slope"], [2, 3, 1, "", "fixed_threshold_width"], [2, 3, 1, "", "fixed_threshold_width_backwards"], [2, 3, 1, "", "fixed_threshold_width_forwards"], [2, 3, 1, "", "fixed_threshold_width_outwards"], [2, 3, 1, "", "fixed_thresholded_widths_from_centre_within_radius"], [2, 4, 1, "", "number_of_samples"], [2, 3, 1, "", "sample_cross_sections"], [2, 3, 1, "", "variable_thresholded_widths_from_centre_within_radius"]], "geofabrics.bathymetry_estimation.InterpolateMeasuredElevations": [[2, 3, 1, "", "check_valid_inputs"], [2, 3, 1, "", "interpolate"], [2, 3, 1, "", "thalweg_centred_spacing"], [2, 3, 1, "", "thalweg_from_measured_centred_spacing"], [2, 3, 1, "", "uniform_spacing"]], "geofabrics.dem": [[3, 2, 1, "", "CoarseDem"], [3, 2, 1, "", "DemBase"], [3, 2, 1, "", "HydrologicallyConditionedDem"], [3, 2, 1, "", "LidarBase"], [3, 2, 1, "", "RawDem"], [3, 2, 1, "", "RoughnessDem"], [3, 1, 1, "", "calculate_idw"], [3, 1, 1, "", "calculate_linear"], [3, 1, 1, "", "chunk_coarse_dem"], [3, 5, 1, "", "delayed_chunk_coarse_dem"], [3, 5, 1, "", "delayed_elevation_over_chunk"], [3, 5, 1, "", "delayed_roughness_over_chunk"], [3, 1, 1, "", "elevation_from_points"], [3, 1, 1, "", "elevation_over_chunk"], [3, 1, 1, "", "load_tiles_in_chunk"], [3, 1, 1, "", "read_file_with_pdal"], [3, 1, 1, "", "roughness_from_points"], [3, 1, 1, "", "roughness_over_chunk"]], "geofabrics.dem.CoarseDem": [[3, 3, 1, "", "__del__"], [3, 3, 1, "", "calculate_dem_bounds"], [3, 4, 1, "", "dem"], [3, 4, 1, "", "empty"], [3, 4, 1, "", "extents"], [3, 4, 1, "", "points"], [3, 4, 1, "", "resolution"]], "geofabrics.dem.DemBase": [[3, 4, 1, "", "dem"], [3, 3, 1, "", "save_dem"]], "geofabrics.dem.HydrologicallyConditionedDem": [[3, 3, 1, "", "__del__"], [3, 4, 1, "", "dem"], [3, 3, 1, "", "interpolate_ocean_bathymetry"], [3, 3, 1, "", "interpolate_rivers"], [3, 3, 1, "", "interpolate_waterways"], [3, 4, 1, "", "raw_extents"]], "geofabrics.dem.LidarBase": [[3, 3, 1, "", "__del__"], [3, 3, 1, "", "add_lidar"], [3, 4, 1, "", "dem"], [3, 3, 1, "", "save_and_load_dem"]], "geofabrics.dem.RawDem": [[3, 3, 1, "", "add_coarse_dem"], [3, 3, 1, "", "add_lidar"], [3, 3, 1, "", "clip_lidar"], [3, 4, 1, "", "no_values_mask"]], "geofabrics.dem.RoughnessDem": [[3, 3, 1, "", "add_lidar"]], "geofabrics.geometry": [[4, 2, 1, "", "BathymetryContours"], [4, 2, 1, "", "CatchmentGeometry"], [4, 2, 1, "", "EstimatedBathymetryPoints"], [4, 2, 1, "", "MarineBathymetryPoints"], [4, 2, 1, "", "RiverMouthFan"], [4, 2, 1, "", "TileInfo"]], "geofabrics.geometry.BathymetryContours": [[4, 3, 1, "", "sample_contours"]], "geofabrics.geometry.CatchmentGeometry": [[4, 4, 1, "", "catchment"], [4, 4, 1, "", "foreshore"], [4, 4, 1, "", "foreshore_and_offshore"], [4, 4, 1, "", "full_land"], [4, 4, 1, "", "land"], [4, 4, 1, "", "land_and_foreshore"], [4, 3, 1, "", "land_and_foreshore_without_lidar"], [4, 4, 1, "", "offshore"], [4, 3, 1, "", "offshore_dense_data_edge"], [4, 3, 1, "", "offshore_no_dense_data"], [4, 3, 1, "", "offshore_without_lidar"]], "geofabrics.geometry.EstimatedBathymetryPoints": [[4, 3, 1, "", "bank_height_points"], [4, 3, 1, "", "bank_heights_exist"], [4, 4, 1, "", "points"], [4, 4, 1, "", "points_array"], [4, 4, 1, "", "polygons"], [4, 4, 1, "", "x"], [4, 4, 1, "", "y"], [4, 4, 1, "", "z"]], "geofabrics.geometry.MarineBathymetryPoints": [[4, 4, 1, "", "points"], [4, 4, 1, "", "x"], [4, 4, 1, "", "y"], [4, 4, 1, "", "z"]], "geofabrics.geometry.RiverMouthFan": [[4, 3, 1, "", "polygon_and_bathymetry"]], "geofabrics.geometry.TileInfo": [[4, 4, 1, "", "tile_names"]], "geofabrics.processor": [[6, 2, 1, "", "BaseProcessor"], [6, 2, 1, "", "HydrologicDemGenerator"], [6, 2, 1, "", "MeasuredRiverGenerator"], [6, 2, 1, "", "RawLidarDemGenerator"], [6, 2, 1, "", "RiverBathymetryGenerator"], [6, 2, 1, "", "RoughnessLengthGenerator"], [6, 2, 1, "", "WaterwayBedElevationEstimator"]], "geofabrics.processor.BaseProcessor": [[6, 3, 1, "", "check_datasets"], [6, 3, 1, "", "check_instruction_path"], [6, 3, 1, "", "check_vector_or_raster"], [6, 3, 1, "", "create_metadata"], [6, 3, 1, "", "create_results_folder"], [6, 3, 1, "", "get_crs"], [6, 3, 1, "", "get_instruction_general"], [6, 3, 1, "", "get_instruction_path"], [6, 3, 1, "", "get_lidar_dataset_crs"], [6, 3, 1, "", "get_lidar_datasets_info"], [6, 3, 1, "", "get_processing_instructions"], [6, 3, 1, "", "get_resolution"], [6, 3, 1, "", "get_vector_or_raster_paths"], [6, 3, 1, "", "run"]], "geofabrics.processor.HydrologicDemGenerator": [[6, 3, 1, "", "add_bathymetry"], [6, 3, 1, "", "run"]], "geofabrics.processor.MeasuredRiverGenerator": [[6, 3, 1, "", "estimate_river_mouth_fan"], [6, 3, 1, "", "get_measured_instruction"], [6, 3, 1, "", "run"]], "geofabrics.processor.RawLidarDemGenerator": [[6, 3, 1, "", "run"]], "geofabrics.processor.RiverBathymetryGenerator": [[6, 3, 1, "", "align_channel"], [6, 3, 1, "", "align_channel_from_osm"], [6, 3, 1, "", "align_channel_from_rec"], [6, 3, 1, "", "alignment_exists"], [6, 3, 1, "", "calculate_channel_characteristics"], [6, 3, 1, "", "calculate_river_bed_elevations"], [6, 3, 1, "", "channel_bathymetry_exist"], [6, 3, 1, "", "channel_characteristics_exist"], [6, 3, 1, "", "characterise_channel"], [6, 3, 1, "", "estimate_river_mouth_fan"], [6, 3, 1, "", "get_bathymetry_instruction"], [6, 3, 1, "", "get_dems"], [6, 3, 1, "", "get_network_channel"], [6, 3, 1, "", "get_result_file_name"], [6, 3, 1, "", "get_result_file_path"], [6, 3, 1, "", "run"]], "geofabrics.processor.RoughnessLengthGenerator": [[6, 3, 1, "", "get_roughness_instruction"], [6, 3, 1, "", "run"]], "geofabrics.processor.WaterwayBedElevationEstimator": [[6, 3, 1, "", "create_dem"], [6, 3, 1, "", "download_osm_values"], [6, 3, 1, "", "estimate_closed_elevations"], [6, 3, 1, "", "estimate_open_elevations"], [6, 3, 1, "", "get_result_file_name"], [6, 3, 1, "", "get_result_file_path"], [6, 3, 1, "", "minimum_elevation_in_polygon"], [6, 3, 1, "", "run"], [6, 3, 1, "", "waterway_elevations_exists"]], "geofabrics.runner": [[7, 1, 1, "", "config_logging"], [7, 1, 1, "", "from_instructions_dict"], [7, 1, 1, "", "from_instructions_file"], [7, 1, 1, "", "merge_dicts"], [7, 1, 1, "", "run_processor_class"], [7, 1, 1, "", "setup_logging_for_run"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "data", "Python data"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:property", "5": "py:data"}, "terms": {"": [1, 6, 7], "0": 3, "1": [2, 6, 9], "10": 3, "10x": 4, "12": 3, "15": 4, "2": [2, 3, 4], "2010": 3, "2193": 4, "2x": 4, "3": 2, "5": 2, "50": 2, "5x": 6, "7204805": 7, "9": 3, "A": [0, 1, 2, 3, 4, 5, 6, 7], "For": 3, "If": [1, 2, 3, 4, 6, 7], "In": [4, 6], "It": [3, 4], "No": 3, "The": [0, 1, 2, 3, 4, 6, 7], "There": 3, "These": 4, "__del__": 3, "__main__": [5, 9], "_dem": 3, "abc": [3, 6], "abov": 2, "abstract": [3, 6], "abstractmethod": 3, "acces": 4, "access": [4, 6], "across": 3, "ad": [2, 3, 4, 6], "adapt": 7, "add": [2, 3, 6], "add_bathymetri": 6, "add_coarse_dem": 3, "add_lidar": 3, "after": [3, 6], "aim": 4, "align": [2, 4, 6], "align_channel": [2, 6], "align_channel_from_osm": 6, "align_channel_from_rec": 6, "aligned_channel": [2, 6], "aligned_channel_fil": 4, "aligned_channel_polylin": 6, "alignment_exist": 6, "all": [0, 3, 4, 6, 7], "allow": 6, "along": [2, 6], "alreadi": [3, 6], "also": [2, 3, 4, 6], "amount": 2, "an": [0, 1, 2, 3, 4, 6], "ani": [2, 3, 4, 6, 7], "api": [6, 10], "api_typ": 6, "appli": 3, "approach": [2, 3, 4, 6], "appropi": [0, 4], "ar": [2, 3, 4, 6, 7], "area": [2, 3, 4, 6], "area_threshold": [2, 3, 6], "arg": 0, "argument": [0, 1], "around": [3, 6], "arrai": 4, "aspr": 3, "associ": [2, 3, 4, 5, 6], "assum": 4, "attribut": 6, "auto": 9, "autoapi": 9, "averag": 3, "awai": 2, "b": 2, "back": 4, "background": [3, 6], "backward": 2, "bank": [2, 4], "bank_height_point": 4, "bank_heights_exist": 4, "base": [2, 3, 6], "baseprocessor": 6, "bathy_contour": [3, 6], "bathyemtri": 4, "bathymeti": 6, "bathymetri": [3, 4, 5, 6], "bathymetry_estim": [5, 6, 9], "bathymetrycontour": 4, "bbox": [3, 6], "bed": [2, 4, 6], "been": [2, 6], "befor": [0, 2, 4, 6], "begin": [2, 4], "behaviour": [3, 6], "being": 4, "benchmark": [1, 7, 9, 10], "benchmark_process": 0, "between": [2, 6], "bool": [2, 3, 4, 6, 7], "both": 4, "bound": [3, 6], "boundari": 3, "box": 6, "branch": 2, "buffer": 4, "buffer_cel": 3, "cach": [3, 6], "cacul": 4, "calcul": [2, 3, 4, 6], "calculate_channel_characterist": 6, "calculate_dem_bound": 3, "calculate_idw": 3, "calculate_linear": 3, "calculate_min_z_start_i": 2, "calculate_min_z_stop_i": 2, "calculate_river_bed_elev": 6, "call": 3, "can": [3, 4, 6], "case": 6, "catcegori": 3, "catchment": [0, 2, 3, 4, 6], "catchment_dir": 6, "catchment_fil": 4, "catchment_geometri": [3, 4, 6], "catchmentgeometri": [3, 4, 6], "cell": 3, "centr": [2, 7], "centre_index": 2, "centrelin": [2, 6], "chang": 6, "channel": [2, 4, 6], "channel_bathymetry_exist": 6, "channel_characteristics_exist": 6, "channel_polylin": 6, "channel_width": 6, "channelcharacterist": [2, 6], "characteris": [2, 6], "characterise_channel": 6, "characterist": [2, 5, 6], "check": [2, 3, 6], "check_dataset": 6, "check_instruction_path": 6, "check_valid_input": 2, "check_vector_or_rast": 6, "chink_siz": 0, "chunk": 3, "chunk_coarse_dem": 3, "chunk_region_to_til": 3, "chunk_siz": [0, 3], "clase": 6, "class": 7, "classif": 3, "classifi": 3, "classmethod": 2, "cli": 1, "cli_run_from_dict": 1, "cli_run_from_fil": 1, "cliff": 2, "clip": [3, 4, 6], "clip_lidar": 3, "cloud": 3, "co": 3, "coars": [3, 6], "coarse_dem": 6, "coarse_dem_path": 3, "coarsedem": 3, "coast": 4, "code": [4, 6], "column": [2, 4], "com": 7, "combin": [0, 3, 5, 6], "command": [0, 1], "compar": [1, 7], "compress": 3, "condit": [3, 5, 6], "config_log": 7, "configur": [0, 7], "consid": 6, "construct": 6, "constructor": 3, "contain": [1, 2, 3, 4, 5, 6, 7, 8, 9], "context": 3, "contour": [4, 5, 6], "contour_fil": 4, "control": [3, 6], "conveni": [0, 1, 7], "coordin": 6, "corner": 2, "correctli": 6, "corridor": 2, "corridor_radiu": 2, "cover": 3, "cr": [2, 3, 4, 6], "creat": [2, 3, 4, 6, 9], "create_dem": 6, "create_metadata": 6, "create_results_fold": 6, "creation": 3, "cross": [2, 6], "cross_sect": 2, "cross_section_elev": 2, "cross_section_radiu": 2, "cross_section_spac": [2, 4], "cubic": 3, "culvert": 6, "current": [6, 7], "curv": 2, "cycl": 2, "dask": 3, "data": [2, 3, 4, 5, 6], "data_path": 6, "data_servic": 6, "data_sourc": 3, "data_typ": 6, "dataservic": 6, "dataset": [2, 3, 6], "dataset_map": 3, "dataset_nam": 6, "datum": 4, "debug": [2, 6], "decreas": 6, "deeper": 4, "default": 6, "default_valu": 3, "defin": [2, 3, 4, 6], "degre": [2, 4], "delai": 3, "delayed_chunk_coarse_dem": 3, "delayed_elevation_over_chunk": 3, "delayed_roughness_over_chunk": 3, "dem": [0, 1, 2, 4, 5, 6, 7, 9], "dem_fil": 3, "dembas": 3, "demgener": 6, "dens": [3, 4], "dense_ext": 4, "depth": [4, 6], "deriv": 6, "describ": 2, "detail": [2, 3], "detect": 2, "determin": [2, 3, 4, 6, 7], "dict": [2, 3, 4, 6, 7], "dict_a": 7, "dict_b": 7, "dictionari": [1, 3, 4, 6, 7], "differ": [0, 3, 7], "differnet": 0, "digit": 2, "dim_i": 3, "dim_x": 3, "dimens": 3, "direct": 2, "distanc": [2, 3], "distribut": 3, "do": 4, "document": 9, "doesn": 2, "done": 6, "downhil": 6, "download": 6, "download_osm_valu": 6, "downsampl": 3, "downstream": [2, 4], "drop_offshore_lidar": 3, "dure": [3, 4], "e": [2, 3, 4, 6], "each": [0, 2, 3, 4, 6], "edg": 4, "either": [4, 6], "element": 6, "elev": [2, 3, 4, 6], "elevation_from_point": 3, "elevation_label": 4, "elevation_over_chunk": 3, "elevation_rang": 3, "emper": 3, "empti": 3, "encod": 6, "end": [0, 4], "enforc": 6, "ensur": [2, 3, 4, 6], "enti": 6, "entir": [0, 2], "entri": [0, 1, 2], "ep": 3, "epsg": [4, 6], "equal": 2, "equat": 3, "error": 6, "estim": [2, 3, 4, 5, 6], "estimate_closed_elev": 6, "estimate_open_elev": 6, "estimate_river_mouth_fan": 6, "estimate_width_and_slop": 2, "estimated_bathymetri": 3, "estimatedbathymetrypoint": [3, 4], "etc": [4, 6], "even": 2, "eventu": 6, "exampl": [4, 6], "except": 6, "exclus": 4, "exclusion_ext": [3, 4], "execut": [0, 6, 7], "exist": 6, "expect": [0, 1, 2, 3, 4], "extent": [3, 4, 6], "extim": 6, "extract": 6, "fals": [2, 3], "fan": [4, 6], "featur": 6, "fetch": 6, "few": 3, "file": [0, 1, 2, 3, 4, 5, 6, 7], "file_path": 6, "filenam": 3, "fill": 6, "filter": 3, "filter_osm_id": 4, "first": [4, 6], "fit": 2, "fix": 2, "fixed_threshold_width": 2, "fixed_threshold_width_backward": 2, "fixed_threshold_width_forward": 2, "fixed_threshold_width_outward": 2, "fixed_thresholded_widths_from_centre_within_radiu": 2, "float": [2, 3, 4, 6], "flow": 6, "folder": 6, "foreshor": [3, 4], "foreshore_and_offshor": 4, "foreshore_buff": 4, "form": [0, 1], "forward": 2, "found": 6, "frame": 2, "freed": 3, "friction": 6, "from": [1, 2, 3, 4, 5, 6, 7], "from_instructions_dict": 7, "from_instructions_fil": 7, "from_network": 2, "full": 4, "full_land": 4, "function": [4, 6], "futur": 4, "g": 6, "gap": [3, 6], "gen_dem": 6, "gener": [0, 1, 2, 3, 5, 6, 7, 9], "geodatafram": [2, 3, 4, 6], "geofabr": [0, 9], "geofabruc": 3, "geometri": [2, 3, 5, 6, 9], "geopai": 6, "geopanda": [2, 3, 4, 6], "get": 6, "get_b_spline_fit": 2, "get_b_spline_fit_point": 2, "get_bathymetry_instruct": 6, "get_channel_catch": 2, "get_cr": 6, "get_dem": 6, "get_instruction_gener": 6, "get_instruction_path": 6, "get_lidar_dataset_cr": 6, "get_lidar_datasets_info": 6, "get_measured_instruct": 6, "get_network_channel": 6, "get_parametric_spline_fit": 2, "get_parametric_spline_fit_point": 2, "get_processing_instruct": 6, "get_resolut": 6, "get_result_file_nam": 6, "get_result_file_path": 6, "get_roughness_instruct": 6, "get_spaced_point": 2, "get_spaced_points_with_corn": 2, "get_vector_or_raster_path": 6, "give": 5, "given": [0, 1, 2, 6, 7], "gnd_dem": 2, "gnd_sampl": 2, "gone": 2, "ground": [2, 3, 6], "ha": [2, 3, 6], "have": [3, 4, 6], "height": [2, 3, 4], "help": 0, "horizont": [4, 6], "horizton": 6, "how": [4, 6, 7], "http": [3, 7], "hydrolog": [3, 5, 6], "hydrologiaclli": 3, "hydrologic_dem": 6, "hydrological_dem_path": 3, "hydrologicallyconditioneddem": 3, "hydrologicdemgener": 6, "i": [1, 2, 3, 4, 6, 7], "id": 2, "identifi": 6, "idw": 3, "immedi": 3, "implement": 3, "import": 6, "includ": [2, 3, 6], "incorpor": 6, "increas": 2, "index": [2, 3, 6, 10], "indic": 2, "inform": [2, 3, 4, 6, 8], "inhereit": 7, "initalis": 4, "initi": 2, "initial_channel": 2, "input": [2, 3], "instead": 2, "instruct": [0, 1, 5, 6, 7], "instructions_path": 7, "int": [2, 3, 4], "interpol": [2, 3, 4, 6], "interpolate_ocean_bathymetri": 3, "interpolate_riv": 3, "interpolate_waterwai": 3, "interpolatemeasuredelev": 2, "interpolation_method": 3, "intput": 1, "invers": 3, "iter": 3, "its": 6, "json": [0, 1, 5, 6], "json_instruct": 6, "k": 2, "kdtree": 3, "keep": 3, "kei": [3, 6], "la": [3, 6], "label": [3, 4, 7], "land": [3, 4, 6], "land_and_foreshor": 4, "land_and_foreshore_without_lidar": 4, "largest": 3, "las_1_4_r13": 3, "later": 6, "layer": [3, 6], "laz": 3, "leaf_siz": 3, "left": 2, "length": [2, 3, 6], "less": 2, "level": 2, "lidar": [3, 4, 5, 6], "lidar_classifications_to_keep": 3, "lidar_datasets_info": 3, "lidar_ext": 4, "lidar_fil": 3, "lidar_interpolation_method": 3, "lidar_sourc": 3, "lidarbas": 3, "like": 4, "line": [0, 1, 2], "linear": 3, "linestr": 2, "linxz": 6, "linz": 6, "list": [3, 4, 6], "load": [3, 6], "load_tiles_in_chunk": 3, "local": 6, "locat": [3, 7], "log": 7, "logger": 7, "logging_filepath": 7, "logic": [3, 6], "look": 2, "lowest": 6, "lri": 6, "m": 4, "mai": [3, 4, 6], "main": [0, 6], "manag": 3, "mani": [0, 6], "manipul": [4, 5], "marin": 4, "marinebathymetrypoint": 4, "mask": 3, "max": 3, "max_threshold": 2, "maximum": 2, "maximum_threshold": 2, "md": 6, "mean": 3, "measur": [2, 6], "measured_sections_explod": 2, "measured_sections_fil": 2, "measuredrivergener": 6, "median": 3, "member": 6, "memori": 3, "merg": 7, "merge_dict": 7, "meta_data": 3, "metadata": [3, 6], "method": [3, 4, 6], "midpoint": 2, "min": 3, "min_channel_width": 2, "min_z_centr": 2, "min_z_search_radiu": 2, "minimum": [2, 6], "minimum_elevation_in_polygon": 6, "miss": [3, 6], "modul": [5, 10], "more": 4, "most": 4, "mouth": [4, 6, 7], "move": 4, "much": 4, "must": [3, 4], "name": [2, 4, 6], "name_dict": 2, "nan": 2, "nc": 3, "ndarrai": [2, 3, 4], "near_indic": 3, "nearest": 3, "nest": 7, "netcdf": [3, 6], "network": [2, 6], "network_fil": 2, "no_values_mask": 3, "node_centred_reach_cross_sect": 2, "none": [2, 3, 4, 6], "note": [3, 6], "number": [2, 3], "number_of_cor": 0, "number_of_sampl": 2, "number_sampl": 2, "numbers_of_cor": 0, "numpi": [2, 3, 4], "object": [2, 6], "ocean": [3, 4, 6], "ocean_contour": 6, "ocean_contour_depth_label": 4, "ocean_contour_fil": 4, "odd": 2, "off": 2, "offshor": [3, 4, 6], "offshore_dense_data_edg": 4, "offshore_no_dense_data": 4, "offshore_without_lidar": 4, "onc": 2, "one": 6, "onli": [3, 6], "open": 6, "openstreetmap": 6, "opentogaphi": 6, "opentopographi": 6, "opn": 6, "opposit": 2, "option": [0, 3, 6], "optition": 3, "order": 2, "org": 3, "other": [2, 4, 6], "otherwis": 2, "othr": 7, "out": [2, 3, 6], "output": [3, 6, 7], "outsid": [3, 4], "outward": [2, 4], "over": 3, "overal": 5, "overlap": 4, "overrid": 6, "packag": [5, 8], "page": [9, 10], "pair": 4, "parallel": 3, "paramet": [2, 3, 4, 6, 7], "parametr": 2, "parse_arg": [0, 1], "path": [0, 1, 2, 3, 4, 6, 7], "pathlib": [2, 3, 4, 6, 7], "pdal": 3, "pdf": 3, "perform": [3, 4], "perpindicular": 6, "pipelin": [0, 1, 5, 6, 7], "pixel": 3, "plot": 0, "point": [0, 1, 2, 3, 4], "point_cloud": 3, "points_arrai": 4, "points_fil": 4, "polygon": [3, 4, 6], "polygon_and_bathymetri": 4, "polygon_fil": 4, "polylin": [2, 6], "polynomi": 2, "popul": 6, "posit": 3, "positivelli": 3, "power": 3, "process": [0, 3, 6], "processor": [1, 5, 7, 9], "processor_class": 7, "processor_label": 7, "produc": 6, "project": 6, "properli": 3, "properti": [2, 3, 4, 6], "provid": 2, "pull": 6, "question": 7, "radiu": 2, "rais": 6, "rang": [0, 3], "raster": 6, "rasteris": 3, "rasterise_chunk": 3, "ratio": 3, "raw": [3, 6], "raw_dem": 6, "raw_dem_path": 3, "raw_ext": 3, "rawdem": 3, "rawlidardemgener": 6, "rbf": 3, "reach": 2, "read": [3, 5, 6], "read_file_with_pd": 3, "readm": 6, "rec": 2, "record": 7, "recurs": 7, "refer": [4, 10], "referecnc": 6, "refern": 3, "region": [3, 4, 6], "region_to_til": 3, "relat": 2, "relev": 6, "reload": 3, "remain": 4, "remot": 6, "replac": 7, "replace_a": 7, "repres": 3, "requir": [2, 3, 6], "resampl": 2, "resolut": [2, 3, 4, 6], "result": [1, 6, 7], "return": [2, 3, 4, 6], "revel": 4, "right": 2, "rive": 4, "river": [2, 4, 5, 6, 7], "river_bathymetry_fil": 4, "river_polygon_fil": 4, "riverb": 2, "riverbank": 2, "riverbank_fil": 2, "riverbathymetrygener": 6, "rivermouthfan": 4, "root": 7, "rough": [3, 6], "roughness_dem": 6, "roughness_from_point": 3, "roughness_over_chunk": 3, "roughnessdem": 3, "roughnesslengthgener": 6, "routin": 3, "run": [0, 1, 5, 6, 7], "run_processor_class": 7, "runner": [5, 9], "same": [2, 4], "sampl": [2, 4, 6], "sample_contour": 4, "sample_cross_sect": 2, "sample_direct": 2, "sampled_channel": 2, "samples_per_sect": 2, "sampling_direct": 2, "save": [0, 3, 6], "save_and_load_dem": 3, "save_dem": 3, "scipi": 3, "script": [0, 1, 7], "search": [2, 10], "search_radiu": 2, "search_radius_index": 2, "section": [2, 6], "see": [3, 4, 6], "segment": 2, "select": [0, 3, 6], "self": 3, "separ": [0, 2], "set": [0, 3, 6], "set_foreshor": 3, "setup": 7, "setup_logging_for_run": 7, "sever": 6, "shape": [4, 6], "should": [2, 3, 6], "side": [2, 4], "singl": [2, 3, 4], "size": 3, "slightli": 4, "slope": [2, 6], "small": 0, "smooth": [2, 3, 4], "smoothing_multipli": 2, "so": [3, 4], "some": 3, "sometim": 3, "sourc": [3, 6], "source_classif": 3, "source_cr": 3, "space": [2, 4], "spatial": 3, "specif": [3, 4], "specifi": [0, 1, 2, 3, 4, 6, 7], "sphinx": 9, "spline": 2, "stackoverflow": 7, "stage": 3, "standard": [1, 3], "start": 2, "start_index": 2, "starting_id": 2, "std": 3, "stop": 2, "stop_index": 2, "str": [3, 4, 6, 7], "straight": [2, 3], "string": 6, "sub": 0, "subkei": 6, "subtract": 2, "support": [4, 6], "surround": [4, 6], "system": 6, "t": 2, "take": [2, 3, 6], "taken": 2, "temp_fold": 3, "test": 6, "thalweg": 2, "thalweg_centr": 2, "thalweg_centred_spac": 2, "thalweg_fil": 2, "thalweg_from_measured_centred_spac": 2, "than": [2, 4], "thefil": 4, "thei": [2, 3], "thi": [2, 3, 4, 6, 9], "three": 6, "thresbold": 2, "threshold": 2, "through": [2, 3, 6], "tile": [3, 4, 6], "tile_fil": 4, "tile_index_fil": 6, "tile_nam": 4, "tile_point": 3, "tileinfo": 4, "time": [0, 7], "todo": 4, "too": 3, "trace": 2, "transect": [2, 6], "transect_radiu": 2, "transit": 4, "tree": 3, "trim": 3, "true": [2, 3, 4, 6], "try": 3, "tunnel": 6, "tupl": 6, "two": 2, "type": [2, 3, 4, 6], "type_label": 3, "unblock": 6, "uniform_spac": 2, "union": [4, 7], "uniqu": 7, "unset": 6, "until": 2, "updat": [3, 6], "upload": 3, "upstream": 2, "us": [2, 3, 4, 6, 7], "usag": 6, "valid": [2, 3, 4], "valu": [2, 3, 4, 6, 7], "variabl": 3, "variable_thresholded_widths_from_centre_within_radiu": 2, "variou": 6, "vector": [4, 5, 6], "veg_dem": [2, 6], "veg_sampl": 2, "veget": 6, "vegrtat": 2, "version": [5, 9], "vertic": [4, 6], "water": [2, 3], "waterwai": [3, 6], "waterway_elevations_exist": 6, "waterwaybedelevationestim": 6, "waterwaybedelevationgener": 6, "weigh": 3, "well": 6, "where": [3, 4, 6], "which": [2, 3, 4, 6], "widest": 2, "width": [2, 4, 6], "width_centre_smoothing_multipli": 2, "within": [2, 3, 4, 6], "without": [3, 4], "work": [2, 4], "workflow": 1, "wp": 3, "wrap": 3, "www": 3, "x": 4, "xarrai": [2, 3, 6], "xy_ground": 3, "xy_out": 3, "y": 4, "yet": 3, "z": [2, 3, 4], "z_label": 4, "z_water": 2, "zero": 3, "zo": 3, "zone": 4}, "titles": ["benchmarking", "geofabrics.__main__", "geofabrics.bathymetry_estimation", "geofabrics.dem", "geofabrics.geometry", "geofabrics", "geofabrics.processor", "geofabrics.runner", "geofabrics.version", "API Reference", "Welcome to Geofabrics\u2019s documentation!"], "titleterms": {"": 10, "__main__": 1, "api": 9, "attribut": 3, "bathymetry_estim": 2, "benchmark": 0, "class": [2, 3, 4, 6], "content": [0, 1, 2, 3, 4, 6, 7], "dem": 3, "document": 10, "function": [0, 1, 2, 3, 7], "geofabr": [1, 2, 3, 4, 5, 6, 7, 8, 10], "geometri": 4, "indic": 10, "modul": [0, 1, 2, 3, 4, 6, 7], "processor": 6, "refer": 9, "runner": 7, "submodul": 5, "tabl": 10, "version": 8, "welcom": 10}})