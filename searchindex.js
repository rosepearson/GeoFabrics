Search.setIndex({"docnames": ["autoapi/benchmarking/index", "autoapi/geofabrics/__main__/index", "autoapi/geofabrics/bathymetry_estimation/index", "autoapi/geofabrics/dem/index", "autoapi/geofabrics/geometry/index", "autoapi/geofabrics/index", "autoapi/geofabrics/processor/index", "autoapi/geofabrics/runner/index", "autoapi/geofabrics/version/index", "autoapi/index", "index"], "filenames": ["autoapi/benchmarking/index.rst", "autoapi/geofabrics/__main__/index.rst", "autoapi/geofabrics/bathymetry_estimation/index.rst", "autoapi/geofabrics/dem/index.rst", "autoapi/geofabrics/geometry/index.rst", "autoapi/geofabrics/index.rst", "autoapi/geofabrics/processor/index.rst", "autoapi/geofabrics/runner/index.rst", "autoapi/geofabrics/version/index.rst", "autoapi/index.rst", "index.rst"], "titles": ["<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">benchmarking</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">geofabrics.__main__</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">geofabrics.bathymetry_estimation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">geofabrics.dem</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">geofabrics.geometry</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">geofabrics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">geofabrics.processor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">geofabrics.runner</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">geofabrics.version</span></code>", "API Reference", "Welcome to Geofabrics\u2019s documentation!"], "terms": {"A": [0, 1, 2, 3, 4, 5, 6, 7], "conveni": [0, 1, 7], "script": [0, 1, 7], "run": [0, 1, 5, 6, 7], "mani": [0, 6], "combin": [0, 3, 5, 6], "chunk_siz": [0, 3], "numbers_of_cor": 0, "small": 0, "sub": 0, "set": [0, 3, 6], "catchment": [0, 2, 3, 4, 6], "help": 0, "select": [0, 3, 6], "an": [0, 1, 2, 3, 4, 6], "appropi": [0, 4], "chink_siz": 0, "number_of_cor": 0, "befor": [0, 2, 4, 6], "process": [0, 3, 6], "entir": [0, 2], "parse_arg": [0, 1], "expect": [0, 1, 2, 3, 4], "command": [0, 1], "line": [0, 1, 2], "argument": [0, 1], "form": [0, 1], "instruct": [0, 1, 5, 6, 7], "path": [0, 1, 2, 3, 4, 6, 7], "json": [0, 1, 5, 6], "file": [0, 1, 2, 3, 4, 5, 6, 7], "benchmark_process": 0, "arg": 0, "dem": [0, 1, 2, 4, 5, 6, 7, 9], "gener": [0, 1, 2, 3, 5, 6, 7, 9], "pipelin": [0, 1, 5, 6, 7], "given": [0, 1, 2, 6, 7], "specifi": [0, 1, 2, 3, 4, 6, 7], "rang": [0, 3], "differ": [0, 3, 7], "option": [0, 3, 6], "save": [0, 3, 6], "each": [0, 2, 3, 4, 6], "separ": [0, 2], "plot": 0, "execut": [0, 6, 7], "time": [0, 7], "all": [0, 3, 4, 6], "differnet": 0, "configur": 0, "end": [0, 4], "main": [0, 6], "The": [0, 1, 2, 3, 4, 6, 7], "entri": [0, 1, 2], "point": [0, 1, 2, 3, 4], "geofabr": [0, 9], "contain": [1, 2, 3, 4, 5, 6, 7, 8, 9], "processor": [1, 5, 7, 9], "cli_run_from_dict": 1, "": [1, 6, 7], "dictionari": [1, 3, 4, 6, 7], "If": [1, 2, 3, 4, 6, 7], "benchmark": [1, 7, 9, 10], "i": [1, 2, 3, 4, 6, 7], "compar": [1, 7], "result": [1, 6, 7], "cli_run_from_fil": 1, "standard": [1, 3], "cli": 1, "workflow": 1, "from": [1, 2, 3, 4, 5, 6, 7], "intput": 1, "thi": [2, 3, 4, 6, 9], "associ": [2, 3, 4, 5, 6], "characteris": [2, 6], "channel": [2, 4, 6], "geometri": [2, 3, 5, 6, 9], "inform": [2, 3, 4, 6, 8], "resolut": [2, 3, 4, 6], "sampling_direct": 2, "1": [2, 6, 9], "defin": [2, 3, 4, 6], "centr": [2, 7], "digit": 2, "network": [2, 6], "paramet": [2, 3, 4, 6, 7], "geopanda": [2, 3, 4, 6], "geodatafram": [2, 3, 4, 6], "float": [2, 3, 4, 6], "int": [2, 3, 4], "classmethod": 2, "from_network": 2, "network_fil": 2, "cr": [2, 3, 4, 6], "starting_id": 2, "area_threshold": [2, 3, 6], "name_dict": 2, "creat": [2, 3, 4, 6, 9], "object": [2, 6], "rec": 2, "relat": 2, "between": [2, 6], "upstream": 2, "downstream": [2, 4], "reach": 2, "id": 2, "trace": 2, "dict": [2, 3, 4, 6, 7], "column": [2, 4], "name": [2, 4, 6], "minimum": [2, 6], "area": [2, 3, 4, 6], "includ": [2, 3, 6], "polylin": [2, 6], "direct": 2, "sampl": [2, 4, 6], "otherwis": 2, "pathlib": [2, 3, 4, 6, 7], "get_parametric_spline_fit_point": 2, "k": 2, "3": 2, "space": [2, 4], "none": [2, 3, 4, 6], "return": [2, 3, 4, 6], "spline": 2, "smooth": [2, 3, 4], "two": 2, "parametr": 2, "curv": 2, "fit": 2, "along": [2, 6], "resampl": 2, "even": 2, "onc": 2, "ar": [2, 3, 4, 6, 7], "provid": 2, "corner": 2, "us": [2, 3, 4, 6, 7], "polynomi": 2, "degre": [2, 4], "should": [2, 6], "off": 2, "5": 2, "straight": [2, 3], "segment": 2, "get_parametric_spline_fit": 2, "get_b_spline_fit": 2, "smoothing_multipli": 2, "50": 2, "b": 2, "type": [2, 3, 4, 6], "numpi": [2, 3, 4], "ndarrai": [2, 3, 4], "get_b_spline_fit_point": 2, "get_channel_catch": 2, "corridor_radiu": 2, "radiu": 2, "corridor": 2, "determin": [2, 3, 4, 6, 7], "width": [2, 4, 6], "get_spaced_point": 2, "data": [2, 3, 4, 5, 6], "frame": 2, "centrelin": [2, 6], "sample_direct": 2, "same": [2, 4], "thei": [2, 3], "order": 2, "opposit": 2, "get_spaced_points_with_corn": 2, "interpolatemeasuredelev": 2, "riverbank_fil": 2, "measured_sections_fil": 2, "cross_section_spac": [2, 4], "interpol": [2, 3, 4, 6], "measur": [2, 6], "river": [2, 4, 5, 6, 7], "bed": [2, 4, 6], "elev": [2, 3, 4, 6], "requir": [2, 3, 6], "linestr": 2, "riverb": 2, "left": 2, "right": 2, "riverbank": 2, "check_valid_input": 2, "check": [2, 3, 6], "input": [2, 3], "samples_per_sect": 2, "thalweg_centr": 2, "true": [2, 3, 4, 6], "equal": 2, "cross": [2, 6], "section": [2, 6], "number_sampl": 2, "number": [2, 3], "bool": [2, 3, 4, 6, 7], "uniform_spac": 2, "cross_sect": 2, "thalweg_centred_spac": 2, "measured_sections_explod": 2, "side": [2, 4], "thalweg": 2, "channelcharacterist": [2, 6], "gnd_dem": 2, "veg_dem": [2, 6], "debug": [2, 6], "fals": [2, 3], "estim": [2, 3, 4, 5, 6], "slope": [2, 6], "other": [2, 4, 6], "characterist": [2, 5, 6], "detail": [2, 3], "xarrai": [2, 3, 6], "dataset": [2, 3, 6], "properti": [2, 3, 4, 6], "number_of_sampl": 2, "take": [2, 3, 6], "odd": 2, "subtract": 2, "instead": 2, "ad": [2, 3, 4, 6], "ensur": [2, 3, 4, 6], "within": [2, 3, 4, 6], "centre_index": 2, "index": [2, 3, 6, 10], "taken": 2, "transect": [2, 6], "calculate_min_z_start_i": 2, "min_z_search_radiu": 2, "start": 2, "begin": [2, 4], "look": 2, "z": [2, 3, 4], "distanc": [2, 3], "search": [2, 10], "calculate_min_z_stop_i": 2, "stop": 2, "node_centred_reach_cross_sect": 2, "sampled_channel": 2, "calcul": [2, 3, 4, 6], "midpoint": 2, "singl": [2, 3, 4], "ani": [2, 3, 4, 6, 7], "branch": 2, "describ": 2, "sample_cross_sect": 2, "also": [2, 3, 4, 6], "add": [2, 3, 6], "min_z_centr": 2, "valu": [2, 3, 4, 6, 7], "fixed_thresholded_widths_from_centre_within_radiu": 2, "cross_section_elev": 2, "threshold": 2, "search_radiu": 2, "min_channel_width": 2, "base": [2, 3, 6], "thresbold": 2, "bank": [2, 4], "height": [2, 3, 4], "abov": 2, "water": [2, 3], "level": 2, "work": [2, 4], "out": [2, 3, 6], "doesn": 2, "t": 2, "detect": 2, "until": 2, "less": 2, "than": [2, 4], "ha": [2, 3, 6], "been": [2, 6], "widest": 2, "valid": [2, 3, 4], "variable_thresholded_widths_from_centre_within_radiu": 2, "maximum_threshold": 2, "maximum": 2, "amount": 2, "increas": 2, "fixed_threshold_width": 2, "gnd_sampl": 2, "veg_sampl": 2, "start_index": 2, "z_water": 2, "search_radius_index": 2, "fix": 2, "outward": [2, 4], "forward": 2, "backward": 2, "ground": [2, 3, 6], "vegrtat": 2, "indic": 2, "awai": 2, "fixed_threshold_width_outward": 2, "nan": 2, "cycl": 2, "gone": 2, "fixed_threshold_width_forward": 2, "stop_index": 2, "approach": [2, 3, 4, 6], "through": [2, 3, 6], "fixed_threshold_width_backward": 2, "align_channel": [2, 6], "initial_channel": 2, "width_centre_smoothing_multipli": 2, "cross_section_radiu": 2, "initi": 2, "align": [2, 4, 6], "2": [2, 3, 4], "length": [2, 3, 6], "which": [2, 3, 4, 6], "estimate_width_and_slop": 2, "aligned_channel": [2, 6], "max_threshold": 2, "e": [2, 3, 4, 6], "cliff": 2, "load": [3, 6], "coarsedem": 3, "dem_fil": 3, "extent": [3, 4, 6], "set_foreshor": 3, "manag": 3, "coars": [3, 6], "background": [3, 6], "context": 3, "specif": [3, 4], "clip": [3, 4, 6], "land": [3, 4, 6], "foreshor": [3, 4], "There": 3, "outsid": [3, 4], "lidar": [3, 4, 5, 6], "exclusion_ext": [3, 4], "posit": 3, "zero": 3, "over": 3, "region": [3, 4, 6], "largest": 3, "dimens": 3, "after": [3, 6], "filter": 3, "empti": 3, "__del__": 3, "memori": 3, "netcdf": [3, 6], "properli": 3, "freed": 3, "calculate_dem_bound": 3, "bound": [3, 6], "dembas": 3, "catchment_geometri": [3, 4, 6], "abc": [3, 6], "abstract": [3, 6], "layer": [3, 6], "geofabruc": 3, "data_sourc": 3, "mai": [3, 4, 6], "sometim": 3, "have": [3, 4, 6], "zo": 3, "rough": [3, 6], "lidar_sourc": 3, "It": [3, 4], "repres": 3, "catcegori": 3, "source_classif": 3, "variabl": 3, "catchmentgeometri": [3, 4, 6], "spatial": 3, "offshor": [3, 4, 6], "dens": [3, 4], "refern": 3, "alreadi": [3, 6], "hydrologicallyconditioneddem": 3, "raw_dem_path": 3, "interpolation_method": 3, "yet": 3, "behaviour": [3, 6], "logic": [3, 6], "control": [3, 6], "method": [3, 4, 6], "linear": 3, "nearest": 3, "cubic": 3, "union": [3, 4, 7], "str": [3, 4, 6, 7], "raw_ext": 3, "tile": [3, 4, 6], "interpolate_ocean_bathymetri": 3, "bathy_contour": [3, 6], "perform": [3, 4], "scipi": 3, "rbf": 3, "interpolate_waterwai": 3, "estimated_bathymetri": 3, "waterwai": [3, 6], "estimatedbathymetrypoint": [3, 4], "interpolate_riv": 3, "bathymetri": [3, 4, 5, 6], "polygon": [3, 4, 6], "label": [3, 4, 7], "type_label": 3, "sourc": [3, 6], "classif": 3, "lidarbas": 3, "elevation_rang": 3, "some": 3, "read": [3, 5, 6], "list": [3, 4, 6], "appli": 3, "add_lidar": 3, "lidar_datasets_info": 3, "lidar_classifications_to_keep": 3, "metadata": [3, 6], "raw": [3, 6], "For": 3, "la": [3, 6], "chunk": 3, "size": 3, "pixel": 3, "parallel": 3, "stage": 3, "keep": 3, "9": 3, "see": [3, 4, 6], "http": [3, 7], "www": 3, "aspr": 3, "org": 3, "wp": 3, "upload": 3, "2010": 3, "12": 3, "las_1_4_r13": 3, "pdf": 3, "meta_data": 3, "must": [3, 4], "dataset_map": 3, "kei": [3, 6], "laz": 3, "save_dem": 3, "filenam": 3, "rawdem": 3, "lidar_interpolation_method": 3, "drop_offshore_lidar": 3, "buffer_cel": 3, "creation": 3, "onli": [3, 6], "optition": 3, "dure": [3, 4], "downsampl": 3, "averag": 3, "mean": 3, "median": 3, "idw": 3, "max": 3, "min": 3, "std": 3, "cell": 3, "around": [3, 6], "boundari": 3, "no_values_mask": 3, "No": 3, "mask": 3, "add_coarse_dem": 3, "coarse_dem_path": 3, "gap": [3, 6], "so": [3, 4], "iter": 3, "miss": [3, 6], "note": [3, 6], "ocean": [3, 4, 6], "try": 3, "ratio": 3, "without": [3, 4], "reload": 3, "optionn": 3, "nc": 3, "where": [3, 4, 6], "roughnessdem": 3, "hydrological_dem_path": 3, "temp_fold": 3, "default_valu": 3, "hydrolog": [3, 5, 6], "condit": [3, 5, 6], "cover": 3, "classifi": 3, "emper": 3, "can": [3, 4, 6], "constructor": 3, "cloud": 3, "distribut": 3, "hydrologiaclli": 3, "across": 3, "equat": 3, "read_file_with_pd": 3, "lidar_fil": 3, "region_to_til": 3, "source_cr": 3, "pdal": 3, "output": [3, 6, 7], "roughness_from_point": 3, "point_cloud": 3, "xy_out": 3, "xy_ground": 3, "ep": 3, "0": 3, "leaf_siz": 3, "10": 3, "locat": [3, 7], "invers": 3, "weigh": 3, "implement": 3, "kdtree": 3, "elevation_from_point": 3, "calculate_idw": 3, "near_indic": 3, "tree": 3, "power": 3, "calculate_linear": 3, "co": 3, "too": 3, "few": 3, "load_tiles_in_chunk": 3, "chunk_region_to_til": 3, "rasteris": 3, "roughness_over_chunk": 3, "dim_x": 3, "dim_i": 3, "tile_point": 3, "elevation_over_chunk": 3, "chunk_coarse_dem": 3, "trim": 3, "bbox": [3, 6], "delayed_chunk_coarse_dem": 3, "wrap": 3, "routin": 3, "dask": 3, "delai": 3, "delayed_roughness_over_chunk": 3, "rasterise_chunk": 3, "delayed_elevation_over_chunk": 3, "manipul": [4, 5], "vector": [4, 5, 6], "catchment_fil": 4, "foreshore_buff": 4, "revel": 4, "epsg": [4, 6], "code": [4, 6], "horizont": [4, 6], "vertic": [4, 6], "datum": 4, "like": 4, "do": 4, "overlap": 4, "x": 4, "buffer": 4, "remain": 4, "support": [4, 6], "function": [4, 6], "how": [4, 6, 7], "much": 4, "exclus": 4, "zone": 4, "lidar_ext": 4, "land_and_foreshore_without_lidar": 4, "exampl": [4, 6], "initalis": 4, "etc": [4, 6], "access": [4, 6], "full_land": 4, "full": 4, "land_and_foreshor": 4, "foreshore_and_offshor": 4, "dense_ext": 4, "offshore_without_lidar": 4, "offshore_dense_data_edg": 4, "edg": 4, "refer": [4, 10], "offshore_no_dense_data": 4, "bathymetrycontour": 4, "contour_fil": 4, "z_label": 4, "contour": [4, 5, 6], "assum": 4, "sample_contour": 4, "marinebathymetrypoint": 4, "points_fil": 4, "acces": 4, "marin": 4, "These": 4, "depth": [4, 6], "y": 4, "polygon_fil": 4, "filter_osm_id": 4, "mouth": [4, 6, 7], "pair": 4, "points_arrai": 4, "arrai": 4, "bank_heights_exist": 4, "bank_height_point": 4, "being": 4, "tileinfo": 4, "tile_fil": 4, "tile_nam": 4, "rivermouthfan": 4, "aligned_channel_fil": 4, "river_bathymetry_fil": 4, "river_polygon_fil": 4, "ocean_contour_fil": 4, "elevation_label": 4, "ocean_contour_depth_label": 4, "fan": [4, 6], "transit": 4, "coast": 4, "shape": [4, 6], "15": 4, "most": 4, "first": [4, 6], "either": [4, 6], "more": 4, "2x": 4, "aim": 4, "slightli": 4, "deeper": 4, "surround": [4, 6], "cacul": 4, "both": 4, "todo": 4, "In": [4, 6], "futur": 4, "move": 4, "10x": 4, "back": 4, "2193": 4, "m": 4, "thefil": 4, "polygon_and_bathymetri": 4, "rive": 4, "bathyemtri": 4, "packag": [5, 8], "give": 5, "modul": [5, 10], "overal": 5, "bathymetry_estim": [5, 6, 9], "__main__": [5, 9], "runner": [5, 9], "version": [5, 9], "baseprocessor": 6, "json_instruct": 6, "element": 6, "popul": 6, "default": 6, "download": 6, "remot": 6, "geopai": 6, "construct": 6, "create_metadata": 6, "clase": 6, "attribut": 6, "get_instruction_path": 6, "local": 6, "cach": 6, "rais": 6, "error": 6, "check_instruction_path": 6, "exist": 6, "create_results_fold": 6, "folder": 6, "get_resolut": 6, "get_cr": 6, "project": 6, "horizton": 6, "one": 6, "get_instruction_gener": 6, "subkei": 6, "get_processing_instruct": 6, "string": 6, "identifi": 6, "check_dataset": 6, "data_typ": 6, "dataservic": 6, "opentogaphi": 6, "linxz": 6, "lri": 6, "g": 6, "opentopographi": 6, "linz": 6, "raster": 6, "check_vector_or_rast": 6, "api_typ": 6, "ocean_contour": 6, "api": [6, 10], "get_vector_or_raster_path": 6, "get": 6, "case": 6, "fetch": 6, "well": 6, "except": 6, "found": 6, "get_lidar_dataset_cr": 6, "data_servic": 6, "dataset_nam": 6, "later": 6, "overrid": 6, "encod": 6, "get_lidar_datasets_info": 6, "three": 6, "enti": 6, "file_path": 6, "tile_index_fil": 6, "coordin": 6, "system": 6, "unset": 6, "correctli": 6, "current": [6, 7], "data_path": 6, "flow": 6, "rawlidardemgener": 6, "demgener": 6, "sever": 6, "import": 6, "member": 6, "relev": 6, "raw_dem": 6, "referecnc": 6, "coarse_dem": 6, "fill": 6, "readm": 6, "md": 6, "usag": 6, "test": 6, "produc": 6, "deriv": 6, "consid": 6, "chang": 6, "hydrologicdemgener": 6, "incorpor": 6, "hydrologic_dem": 6, "add_bathymetri": 6, "catchment_dir": 6, "roughnesslengthgener": 6, "roughness_dem": 6, "get_roughness_instruct": 6, "measuredrivergener": 6, "get_measured_instruct": 6, "estimate_river_mouth_fan": 6, "extract": 6, "extim": 6, "eventu": 6, "riverbathymetrygener": 6, "friction": 6, "done": 6, "channel_polylin": 6, "gen_dem": 6, "veget": 6, "aligned_channel_polylin": 6, "its": 6, "updat": 6, "perpindicular": 6, "channel_characteristics_exist": 6, "channel_bathymetry_exist": 6, "alignment_exist": 6, "get_result_file_nam": 6, "get_result_file_path": 6, "get_bathymetry_instruct": 6, "get_network_channel": 6, "get_dem": 6, "allow": 6, "tupl": 6, "channel_width": 6, "calculate_channel_characterist": 6, "characterise_channel": 6, "align_channel_from_rec": 6, "align_channel_from_osm": 6, "calculate_river_bed_elev": 6, "variou": 6, "waterwaybedelevationestim": 6, "waterwaybedelevationgener": 6, "pull": 6, "openstreetmap": 6, "tunnel": 6, "unblock": 6, "lowest": 6, "opn": 6, "downhil": 6, "waterway_elevations_exist": 6, "culvert": 6, "bathymeti": 6, "minimum_elevation_in_polygon": 6, "box": 6, "estimate_closed_elev": 6, "estimate_open_elev": 6, "open": 6, "enforc": 6, "decreas": 6, "create_dem": 6, "5x": 6, "download_osm_valu": 6, "featur": 6, "setup_logging_for_run": 7, "setup": 7, "log": 7, "run_processor_class": 7, "processor_class": 7, "processor_label": 7, "class": 7, "record": 7, "uniqu": 7, "merge_dict": 7, "dict_a": 7, "dict_b": 7, "replace_a": 7, "merg": 7, "recurs": 7, "nest": 7, "replac": 7, "adapt": 7, "stackoverflow": 7, "com": 7, "question": 7, "7204805": 7, "from_instructions_dict": 7, "from_instructions_fil": 7, "instructions_path": 7, "page": [9, 10], "auto": 9, "document": 9, "sphinx": 9, "autoapi": 9}, "objects": {"": [[0, 0, 0, "-", "benchmarking"], [5, 0, 0, "-", "geofabrics"]], "benchmarking": [[0, 1, 1, "", "benchmark_processing"], [0, 1, 1, "", "main"], [0, 1, 1, "", "parse_args"]], "geofabrics": [[1, 0, 0, "-", "__main__"], [2, 0, 0, "-", "bathymetry_estimation"], [3, 0, 0, "-", "dem"], [4, 0, 0, "-", "geometry"], [6, 0, 0, "-", "processor"], [7, 0, 0, "-", "runner"], [8, 0, 0, "-", "version"]], "geofabrics.__main__": [[1, 1, 1, "", "cli_run_from_dict"], [1, 1, 1, "", "cli_run_from_file"], [1, 1, 1, "", "parse_args"]], "geofabrics.bathymetry_estimation": [[2, 2, 1, "", "Channel"], [2, 2, 1, "", "ChannelCharacteristics"], [2, 2, 1, "", "InterpolateMeasuredElevations"]], "geofabrics.bathymetry_estimation.Channel": [[2, 3, 1, "", "from_network"], [2, 3, 1, "", "get_b_spline_fit"], [2, 3, 1, "", "get_b_spline_fit_points"], [2, 3, 1, "", "get_channel_catchment"], [2, 3, 1, "", "get_parametric_spline_fit"], [2, 3, 1, "", "get_parametric_spline_fit_points"], [2, 3, 1, "", "get_spaced_points"], [2, 3, 1, "", "get_spaced_points_with_corners"]], "geofabrics.bathymetry_estimation.ChannelCharacteristics": [[2, 3, 1, "", "align_channel"], [2, 3, 1, "", "calculate_min_z_start_i"], [2, 3, 1, "", "calculate_min_z_stop_i"], [2, 4, 1, "", "centre_index"], [2, 3, 1, "", "estimate_width_and_slope"], [2, 3, 1, "", "fixed_threshold_width"], [2, 3, 1, "", "fixed_threshold_width_backwards"], [2, 3, 1, "", "fixed_threshold_width_forwards"], [2, 3, 1, "", "fixed_threshold_width_outwards"], [2, 3, 1, "", "fixed_thresholded_widths_from_centre_within_radius"], [2, 3, 1, "", "node_centred_reach_cross_section"], [2, 4, 1, "", "number_of_samples"], [2, 3, 1, "", "sample_cross_sections"], [2, 3, 1, "", "variable_thresholded_widths_from_centre_within_radius"]], "geofabrics.bathymetry_estimation.InterpolateMeasuredElevations": [[2, 3, 1, "", "check_valid_inputs"], [2, 3, 1, "", "interpolate"], [2, 3, 1, "", "thalweg_centred_spacing"], [2, 3, 1, "", "uniform_spacing"]], "geofabrics.dem": [[3, 2, 1, "", "CoarseDem"], [3, 2, 1, "", "DemBase"], [3, 2, 1, "", "HydrologicallyConditionedDem"], [3, 2, 1, "", "LidarBase"], [3, 2, 1, "", "RawDem"], [3, 2, 1, "", "RoughnessDem"], [3, 1, 1, "", "calculate_idw"], [3, 1, 1, "", "calculate_linear"], [3, 1, 1, "", "chunk_coarse_dem"], [3, 5, 1, "", "delayed_chunk_coarse_dem"], [3, 5, 1, "", "delayed_elevation_over_chunk"], [3, 5, 1, "", "delayed_roughness_over_chunk"], [3, 1, 1, "", "elevation_from_points"], [3, 1, 1, "", "elevation_over_chunk"], [3, 1, 1, "", "load_tiles_in_chunk"], [3, 1, 1, "", "read_file_with_pdal"], [3, 1, 1, "", "roughness_from_points"], [3, 1, 1, "", "roughness_over_chunk"]], "geofabrics.dem.CoarseDem": [[3, 3, 1, "", "__del__"], [3, 3, 1, "", "calculate_dem_bounds"], [3, 4, 1, "", "dem"], [3, 4, 1, "", "empty"], [3, 4, 1, "", "extents"], [3, 4, 1, "", "points"], [3, 4, 1, "", "resolution"]], "geofabrics.dem.DemBase": [[3, 4, 1, "", "dem"]], "geofabrics.dem.HydrologicallyConditionedDem": [[3, 3, 1, "", "__del__"], [3, 4, 1, "", "dem"], [3, 3, 1, "", "interpolate_ocean_bathymetry"], [3, 3, 1, "", "interpolate_rivers"], [3, 3, 1, "", "interpolate_waterways"], [3, 4, 1, "", "raw_extents"]], "geofabrics.dem.LidarBase": [[3, 3, 1, "", "__del__"], [3, 3, 1, "", "add_lidar"], [3, 4, 1, "", "dem"], [3, 3, 1, "", "save_dem"]], "geofabrics.dem.RawDem": [[3, 3, 1, "", "add_coarse_dem"], [3, 3, 1, "", "add_lidar"], [3, 4, 1, "", "dem"], [3, 4, 1, "", "no_values_mask"], [3, 3, 1, "", "save_dem"]], "geofabrics.dem.RoughnessDem": [[3, 3, 1, "", "add_lidar"]], "geofabrics.geometry": [[4, 2, 1, "", "BathymetryContours"], [4, 2, 1, "", "CatchmentGeometry"], [4, 2, 1, "", "EstimatedBathymetryPoints"], [4, 2, 1, "", "MarineBathymetryPoints"], [4, 2, 1, "", "RiverMouthFan"], [4, 2, 1, "", "TileInfo"]], "geofabrics.geometry.BathymetryContours": [[4, 3, 1, "", "sample_contours"]], "geofabrics.geometry.CatchmentGeometry": [[4, 4, 1, "", "catchment"], [4, 4, 1, "", "foreshore"], [4, 4, 1, "", "foreshore_and_offshore"], [4, 4, 1, "", "full_land"], [4, 4, 1, "", "land"], [4, 4, 1, "", "land_and_foreshore"], [4, 3, 1, "", "land_and_foreshore_without_lidar"], [4, 4, 1, "", "offshore"], [4, 3, 1, "", "offshore_dense_data_edge"], [4, 3, 1, "", "offshore_no_dense_data"], [4, 3, 1, "", "offshore_without_lidar"]], "geofabrics.geometry.EstimatedBathymetryPoints": [[4, 3, 1, "", "bank_height_points"], [4, 3, 1, "", "bank_heights_exist"], [4, 4, 1, "", "points"], [4, 4, 1, "", "points_array"], [4, 4, 1, "", "polygons"], [4, 4, 1, "", "x"], [4, 4, 1, "", "y"], [4, 4, 1, "", "z"]], "geofabrics.geometry.MarineBathymetryPoints": [[4, 4, 1, "", "points"], [4, 4, 1, "", "x"], [4, 4, 1, "", "y"], [4, 4, 1, "", "z"]], "geofabrics.geometry.RiverMouthFan": [[4, 3, 1, "", "polygon_and_bathymetry"]], "geofabrics.geometry.TileInfo": [[4, 4, 1, "", "tile_names"]], "geofabrics.processor": [[6, 2, 1, "", "BaseProcessor"], [6, 2, 1, "", "HydrologicDemGenerator"], [6, 2, 1, "", "MeasuredRiverGenerator"], [6, 2, 1, "", "RawLidarDemGenerator"], [6, 2, 1, "", "RiverBathymetryGenerator"], [6, 2, 1, "", "RoughnessLengthGenerator"], [6, 2, 1, "", "WaterwayBedElevationEstimator"]], "geofabrics.processor.BaseProcessor": [[6, 3, 1, "", "check_datasets"], [6, 3, 1, "", "check_instruction_path"], [6, 3, 1, "", "check_vector_or_raster"], [6, 3, 1, "", "create_metadata"], [6, 3, 1, "", "create_results_folder"], [6, 3, 1, "", "get_crs"], [6, 3, 1, "", "get_instruction_general"], [6, 3, 1, "", "get_instruction_path"], [6, 3, 1, "", "get_lidar_dataset_crs"], [6, 3, 1, "", "get_lidar_datasets_info"], [6, 3, 1, "", "get_processing_instructions"], [6, 3, 1, "", "get_resolution"], [6, 3, 1, "", "get_vector_or_raster_paths"], [6, 3, 1, "", "run"]], "geofabrics.processor.HydrologicDemGenerator": [[6, 3, 1, "", "add_bathymetry"], [6, 3, 1, "", "run"]], "geofabrics.processor.MeasuredRiverGenerator": [[6, 3, 1, "", "estimate_river_mouth_fan"], [6, 3, 1, "", "get_measured_instruction"], [6, 3, 1, "", "run"]], "geofabrics.processor.RawLidarDemGenerator": [[6, 3, 1, "", "run"]], "geofabrics.processor.RiverBathymetryGenerator": [[6, 3, 1, "", "align_channel"], [6, 3, 1, "", "align_channel_from_osm"], [6, 3, 1, "", "align_channel_from_rec"], [6, 3, 1, "", "alignment_exists"], [6, 3, 1, "", "calculate_channel_characteristics"], [6, 3, 1, "", "calculate_river_bed_elevations"], [6, 3, 1, "", "channel_bathymetry_exist"], [6, 3, 1, "", "channel_characteristics_exist"], [6, 3, 1, "", "characterise_channel"], [6, 3, 1, "", "estimate_river_mouth_fan"], [6, 3, 1, "", "get_bathymetry_instruction"], [6, 3, 1, "", "get_dems"], [6, 3, 1, "", "get_network_channel"], [6, 3, 1, "", "get_result_file_name"], [6, 3, 1, "", "get_result_file_path"], [6, 3, 1, "", "run"]], "geofabrics.processor.RoughnessLengthGenerator": [[6, 3, 1, "", "get_roughness_instruction"], [6, 3, 1, "", "run"]], "geofabrics.processor.WaterwayBedElevationEstimator": [[6, 3, 1, "", "create_dem"], [6, 3, 1, "", "download_osm_values"], [6, 3, 1, "", "estimate_closed_elevations"], [6, 3, 1, "", "estimate_open_elevations"], [6, 3, 1, "", "get_result_file_name"], [6, 3, 1, "", "get_result_file_path"], [6, 3, 1, "", "minimum_elevation_in_polygon"], [6, 3, 1, "", "run"], [6, 3, 1, "", "waterway_elevations_exists"]], "geofabrics.runner": [[7, 1, 1, "", "from_instructions_dict"], [7, 1, 1, "", "from_instructions_file"], [7, 1, 1, "", "merge_dicts"], [7, 1, 1, "", "run_processor_class"], [7, 1, 1, "", "setup_logging_for_run"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:property", "5": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "data", "Python data"]}, "titleterms": {"benchmark": 0, "modul": [0, 1, 2, 3, 4, 6, 7], "content": [0, 1, 2, 3, 4, 6, 7], "function": [0, 1, 3, 7], "geofabr": [1, 2, 3, 4, 5, 6, 7, 8, 10], "__main__": 1, "bathymetry_estim": 2, "class": [2, 3, 4, 6], "dem": 3, "attribut": 3, "geometri": 4, "submodul": 5, "processor": 6, "runner": 7, "version": 8, "api": 9, "refer": 9, "welcom": 10, "": 10, "document": 10, "indic": 10, "tabl": 10}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"benchmarking": [[0, "module-benchmarking"]], "Module Contents": [[0, "module-contents"], [1, "module-contents"], [2, "module-contents"], [3, "module-contents"], [4, "module-contents"], [6, "module-contents"], [7, "module-contents"]], "Functions": [[0, "functions"], [1, "functions"], [3, "functions"], [7, "functions"]], "geofabrics.__main__": [[1, "module-geofabrics.__main__"]], "geofabrics.bathymetry_estimation": [[2, "module-geofabrics.bathymetry_estimation"]], "Classes": [[2, "classes"], [3, "classes"], [4, "classes"], [6, "classes"]], "geofabrics.dem": [[3, "module-geofabrics.dem"]], "Attributes": [[3, "attributes"]], "geofabrics.geometry": [[4, "module-geofabrics.geometry"]], "geofabrics": [[5, "module-geofabrics"]], "Submodules": [[5, "submodules"]], "geofabrics.processor": [[6, "module-geofabrics.processor"]], "geofabrics.runner": [[7, "module-geofabrics.runner"]], "geofabrics.version": [[8, "module-geofabrics.version"]], "API Reference": [[9, "api-reference"]], "Welcome to Geofabrics\u2019s documentation!": [[10, "welcome-to-geofabrics-s-documentation"]], "Indices and tables": [[10, "indices-and-tables"]]}, "indexentries": {"benchmark_processing() (in module benchmarking)": [[0, "benchmarking.benchmark_processing"]], "benchmarking": [[0, "module-benchmarking"]], "main() (in module benchmarking)": [[0, "benchmarking.main"]], "module": [[0, "module-benchmarking"], [1, "module-geofabrics.__main__"], [2, "module-geofabrics.bathymetry_estimation"], [3, "module-geofabrics.dem"], [4, "module-geofabrics.geometry"], [5, "module-geofabrics"], [6, "module-geofabrics.processor"], [7, "module-geofabrics.runner"], [8, "module-geofabrics.version"]], "parse_args() (in module benchmarking)": [[0, "benchmarking.parse_args"]], "cli_run_from_dict() (in module geofabrics.__main__)": [[1, "geofabrics.__main__.cli_run_from_dict"]], "cli_run_from_file() (in module geofabrics.__main__)": [[1, "geofabrics.__main__.cli_run_from_file"]], "geofabrics.__main__": [[1, "module-geofabrics.__main__"]], "parse_args() (in module geofabrics.__main__)": [[1, "geofabrics.__main__.parse_args"]], "channel (class in geofabrics.bathymetry_estimation)": [[2, "geofabrics.bathymetry_estimation.Channel"]], "channelcharacteristics (class in geofabrics.bathymetry_estimation)": [[2, "geofabrics.bathymetry_estimation.ChannelCharacteristics"]], "interpolatemeasuredelevations (class in geofabrics.bathymetry_estimation)": [[2, "geofabrics.bathymetry_estimation.InterpolateMeasuredElevations"]], "align_channel() (geofabrics.bathymetry_estimation.channelcharacteristics method)": [[2, "geofabrics.bathymetry_estimation.ChannelCharacteristics.align_channel"]], "calculate_min_z_start_i() (geofabrics.bathymetry_estimation.channelcharacteristics method)": [[2, "geofabrics.bathymetry_estimation.ChannelCharacteristics.calculate_min_z_start_i"]], "calculate_min_z_stop_i() (geofabrics.bathymetry_estimation.channelcharacteristics method)": [[2, "geofabrics.bathymetry_estimation.ChannelCharacteristics.calculate_min_z_stop_i"]], "centre_index (geofabrics.bathymetry_estimation.channelcharacteristics property)": [[2, "geofabrics.bathymetry_estimation.ChannelCharacteristics.centre_index"]], "check_valid_inputs() (geofabrics.bathymetry_estimation.interpolatemeasuredelevations method)": [[2, "geofabrics.bathymetry_estimation.InterpolateMeasuredElevations.check_valid_inputs"]], "estimate_width_and_slope() (geofabrics.bathymetry_estimation.channelcharacteristics method)": [[2, "geofabrics.bathymetry_estimation.ChannelCharacteristics.estimate_width_and_slope"]], "fixed_threshold_width() (geofabrics.bathymetry_estimation.channelcharacteristics method)": [[2, "geofabrics.bathymetry_estimation.ChannelCharacteristics.fixed_threshold_width"]], "fixed_threshold_width_backwards() (geofabrics.bathymetry_estimation.channelcharacteristics method)": [[2, "geofabrics.bathymetry_estimation.ChannelCharacteristics.fixed_threshold_width_backwards"]], "fixed_threshold_width_forwards() (geofabrics.bathymetry_estimation.channelcharacteristics method)": [[2, "geofabrics.bathymetry_estimation.ChannelCharacteristics.fixed_threshold_width_forwards"]], "fixed_threshold_width_outwards() (geofabrics.bathymetry_estimation.channelcharacteristics method)": [[2, "geofabrics.bathymetry_estimation.ChannelCharacteristics.fixed_threshold_width_outwards"]], "fixed_thresholded_widths_from_centre_within_radius() (geofabrics.bathymetry_estimation.channelcharacteristics method)": [[2, "geofabrics.bathymetry_estimation.ChannelCharacteristics.fixed_thresholded_widths_from_centre_within_radius"]], "from_network() (geofabrics.bathymetry_estimation.channel class method)": [[2, "geofabrics.bathymetry_estimation.Channel.from_network"]], "geofabrics.bathymetry_estimation": [[2, "module-geofabrics.bathymetry_estimation"]], "get_b_spline_fit() (geofabrics.bathymetry_estimation.channel method)": [[2, "geofabrics.bathymetry_estimation.Channel.get_b_spline_fit"]], "get_b_spline_fit_points() (geofabrics.bathymetry_estimation.channel method)": [[2, "geofabrics.bathymetry_estimation.Channel.get_b_spline_fit_points"]], "get_channel_catchment() (geofabrics.bathymetry_estimation.channel method)": [[2, "geofabrics.bathymetry_estimation.Channel.get_channel_catchment"]], "get_parametric_spline_fit() (geofabrics.bathymetry_estimation.channel method)": [[2, "geofabrics.bathymetry_estimation.Channel.get_parametric_spline_fit"]], "get_parametric_spline_fit_points() (geofabrics.bathymetry_estimation.channel method)": [[2, "geofabrics.bathymetry_estimation.Channel.get_parametric_spline_fit_points"]], "get_spaced_points() (geofabrics.bathymetry_estimation.channel method)": [[2, "geofabrics.bathymetry_estimation.Channel.get_spaced_points"]], "get_spaced_points_with_corners() (geofabrics.bathymetry_estimation.channel method)": [[2, "geofabrics.bathymetry_estimation.Channel.get_spaced_points_with_corners"]], "interpolate() (geofabrics.bathymetry_estimation.interpolatemeasuredelevations method)": [[2, "geofabrics.bathymetry_estimation.InterpolateMeasuredElevations.interpolate"]], "node_centred_reach_cross_section() (geofabrics.bathymetry_estimation.channelcharacteristics method)": [[2, "geofabrics.bathymetry_estimation.ChannelCharacteristics.node_centred_reach_cross_section"]], "number_of_samples (geofabrics.bathymetry_estimation.channelcharacteristics property)": [[2, "geofabrics.bathymetry_estimation.ChannelCharacteristics.number_of_samples"]], "sample_cross_sections() (geofabrics.bathymetry_estimation.channelcharacteristics method)": [[2, "geofabrics.bathymetry_estimation.ChannelCharacteristics.sample_cross_sections"]], "thalweg_centred_spacing() (geofabrics.bathymetry_estimation.interpolatemeasuredelevations method)": [[2, "geofabrics.bathymetry_estimation.InterpolateMeasuredElevations.thalweg_centred_spacing"]], "uniform_spacing() (geofabrics.bathymetry_estimation.interpolatemeasuredelevations method)": [[2, "geofabrics.bathymetry_estimation.InterpolateMeasuredElevations.uniform_spacing"]], "variable_thresholded_widths_from_centre_within_radius() (geofabrics.bathymetry_estimation.channelcharacteristics method)": [[2, "geofabrics.bathymetry_estimation.ChannelCharacteristics.variable_thresholded_widths_from_centre_within_radius"]], "coarsedem (class in geofabrics.dem)": [[3, "geofabrics.dem.CoarseDem"]], "dembase (class in geofabrics.dem)": [[3, "geofabrics.dem.DemBase"]], "hydrologicallyconditioneddem (class in geofabrics.dem)": [[3, "geofabrics.dem.HydrologicallyConditionedDem"]], "lidarbase (class in geofabrics.dem)": [[3, "geofabrics.dem.LidarBase"]], "rawdem (class in geofabrics.dem)": [[3, "geofabrics.dem.RawDem"]], "roughnessdem (class in geofabrics.dem)": [[3, "geofabrics.dem.RoughnessDem"]], "__del__() (geofabrics.dem.coarsedem method)": [[3, "geofabrics.dem.CoarseDem.__del__"]], "__del__() (geofabrics.dem.hydrologicallyconditioneddem method)": [[3, "geofabrics.dem.HydrologicallyConditionedDem.__del__"]], "__del__() (geofabrics.dem.lidarbase method)": [[3, "geofabrics.dem.LidarBase.__del__"]], "add_coarse_dem() (geofabrics.dem.rawdem method)": [[3, "geofabrics.dem.RawDem.add_coarse_dem"]], "add_lidar() (geofabrics.dem.lidarbase method)": [[3, "geofabrics.dem.LidarBase.add_lidar"]], "add_lidar() (geofabrics.dem.rawdem method)": [[3, "geofabrics.dem.RawDem.add_lidar"]], "add_lidar() (geofabrics.dem.roughnessdem method)": [[3, "geofabrics.dem.RoughnessDem.add_lidar"]], "calculate_dem_bounds() (geofabrics.dem.coarsedem method)": [[3, "geofabrics.dem.CoarseDem.calculate_dem_bounds"]], "calculate_idw() (in module geofabrics.dem)": [[3, "geofabrics.dem.calculate_idw"]], "calculate_linear() (in module geofabrics.dem)": [[3, "geofabrics.dem.calculate_linear"]], "chunk_coarse_dem() (in module geofabrics.dem)": [[3, "geofabrics.dem.chunk_coarse_dem"]], "delayed_chunk_coarse_dem (in module geofabrics.dem)": [[3, "geofabrics.dem.delayed_chunk_coarse_dem"]], "delayed_elevation_over_chunk (in module geofabrics.dem)": [[3, "geofabrics.dem.delayed_elevation_over_chunk"]], "delayed_roughness_over_chunk (in module geofabrics.dem)": [[3, "geofabrics.dem.delayed_roughness_over_chunk"]], "dem (geofabrics.dem.coarsedem property)": [[3, "geofabrics.dem.CoarseDem.dem"]], "dem (geofabrics.dem.dembase property)": [[3, "geofabrics.dem.DemBase.dem"]], "dem (geofabrics.dem.hydrologicallyconditioneddem property)": [[3, "geofabrics.dem.HydrologicallyConditionedDem.dem"]], "dem (geofabrics.dem.lidarbase property)": [[3, "geofabrics.dem.LidarBase.dem"]], "dem (geofabrics.dem.rawdem property)": [[3, "geofabrics.dem.RawDem.dem"]], "elevation_from_points() (in module geofabrics.dem)": [[3, "geofabrics.dem.elevation_from_points"]], "elevation_over_chunk() (in module geofabrics.dem)": [[3, "geofabrics.dem.elevation_over_chunk"]], "empty (geofabrics.dem.coarsedem property)": [[3, "geofabrics.dem.CoarseDem.empty"]], "extents (geofabrics.dem.coarsedem property)": [[3, "geofabrics.dem.CoarseDem.extents"]], "geofabrics.dem": [[3, "module-geofabrics.dem"]], "interpolate_ocean_bathymetry() (geofabrics.dem.hydrologicallyconditioneddem method)": [[3, "geofabrics.dem.HydrologicallyConditionedDem.interpolate_ocean_bathymetry"]], "interpolate_rivers() (geofabrics.dem.hydrologicallyconditioneddem method)": [[3, "geofabrics.dem.HydrologicallyConditionedDem.interpolate_rivers"]], "interpolate_waterways() (geofabrics.dem.hydrologicallyconditioneddem method)": [[3, "geofabrics.dem.HydrologicallyConditionedDem.interpolate_waterways"]], "load_tiles_in_chunk() (in module geofabrics.dem)": [[3, "geofabrics.dem.load_tiles_in_chunk"]], "no_values_mask (geofabrics.dem.rawdem property)": [[3, "geofabrics.dem.RawDem.no_values_mask"]], "points (geofabrics.dem.coarsedem property)": [[3, "geofabrics.dem.CoarseDem.points"]], "raw_extents (geofabrics.dem.hydrologicallyconditioneddem property)": [[3, "geofabrics.dem.HydrologicallyConditionedDem.raw_extents"]], "read_file_with_pdal() (in module geofabrics.dem)": [[3, "geofabrics.dem.read_file_with_pdal"]], "resolution (geofabrics.dem.coarsedem property)": [[3, "geofabrics.dem.CoarseDem.resolution"]], "roughness_from_points() (in module geofabrics.dem)": [[3, "geofabrics.dem.roughness_from_points"]], "roughness_over_chunk() (in module geofabrics.dem)": [[3, "geofabrics.dem.roughness_over_chunk"]], "save_dem() (geofabrics.dem.lidarbase method)": [[3, "geofabrics.dem.LidarBase.save_dem"]], "save_dem() (geofabrics.dem.rawdem method)": [[3, "geofabrics.dem.RawDem.save_dem"]], "bathymetrycontours (class in geofabrics.geometry)": [[4, "geofabrics.geometry.BathymetryContours"]], "catchmentgeometry (class in geofabrics.geometry)": [[4, "geofabrics.geometry.CatchmentGeometry"]], "estimatedbathymetrypoints (class in geofabrics.geometry)": [[4, "geofabrics.geometry.EstimatedBathymetryPoints"]], "marinebathymetrypoints (class in geofabrics.geometry)": [[4, "geofabrics.geometry.MarineBathymetryPoints"]], "rivermouthfan (class in geofabrics.geometry)": [[4, "geofabrics.geometry.RiverMouthFan"]], "tileinfo (class in geofabrics.geometry)": [[4, "geofabrics.geometry.TileInfo"]], "bank_height_points() (geofabrics.geometry.estimatedbathymetrypoints method)": [[4, "geofabrics.geometry.EstimatedBathymetryPoints.bank_height_points"]], "bank_heights_exist() (geofabrics.geometry.estimatedbathymetrypoints method)": [[4, "geofabrics.geometry.EstimatedBathymetryPoints.bank_heights_exist"]], "catchment (geofabrics.geometry.catchmentgeometry property)": [[4, "geofabrics.geometry.CatchmentGeometry.catchment"]], "foreshore (geofabrics.geometry.catchmentgeometry property)": [[4, "geofabrics.geometry.CatchmentGeometry.foreshore"]], "foreshore_and_offshore (geofabrics.geometry.catchmentgeometry property)": [[4, "geofabrics.geometry.CatchmentGeometry.foreshore_and_offshore"]], "full_land (geofabrics.geometry.catchmentgeometry property)": [[4, "geofabrics.geometry.CatchmentGeometry.full_land"]], "geofabrics.geometry": [[4, "module-geofabrics.geometry"]], "land (geofabrics.geometry.catchmentgeometry property)": [[4, "geofabrics.geometry.CatchmentGeometry.land"]], "land_and_foreshore (geofabrics.geometry.catchmentgeometry property)": [[4, "geofabrics.geometry.CatchmentGeometry.land_and_foreshore"]], "land_and_foreshore_without_lidar() (geofabrics.geometry.catchmentgeometry method)": [[4, "geofabrics.geometry.CatchmentGeometry.land_and_foreshore_without_lidar"]], "offshore (geofabrics.geometry.catchmentgeometry property)": [[4, "geofabrics.geometry.CatchmentGeometry.offshore"]], "offshore_dense_data_edge() (geofabrics.geometry.catchmentgeometry method)": [[4, "geofabrics.geometry.CatchmentGeometry.offshore_dense_data_edge"]], "offshore_no_dense_data() (geofabrics.geometry.catchmentgeometry method)": [[4, "geofabrics.geometry.CatchmentGeometry.offshore_no_dense_data"]], "offshore_without_lidar() (geofabrics.geometry.catchmentgeometry method)": [[4, "geofabrics.geometry.CatchmentGeometry.offshore_without_lidar"]], "points (geofabrics.geometry.estimatedbathymetrypoints property)": [[4, "geofabrics.geometry.EstimatedBathymetryPoints.points"]], "points (geofabrics.geometry.marinebathymetrypoints property)": [[4, "geofabrics.geometry.MarineBathymetryPoints.points"]], "points_array (geofabrics.geometry.estimatedbathymetrypoints property)": [[4, "geofabrics.geometry.EstimatedBathymetryPoints.points_array"]], "polygon_and_bathymetry() (geofabrics.geometry.rivermouthfan method)": [[4, "geofabrics.geometry.RiverMouthFan.polygon_and_bathymetry"]], "polygons (geofabrics.geometry.estimatedbathymetrypoints property)": [[4, "geofabrics.geometry.EstimatedBathymetryPoints.polygons"]], "sample_contours() (geofabrics.geometry.bathymetrycontours method)": [[4, "geofabrics.geometry.BathymetryContours.sample_contours"]], "tile_names (geofabrics.geometry.tileinfo property)": [[4, "geofabrics.geometry.TileInfo.tile_names"]], "x (geofabrics.geometry.estimatedbathymetrypoints property)": [[4, "geofabrics.geometry.EstimatedBathymetryPoints.x"]], "x (geofabrics.geometry.marinebathymetrypoints property)": [[4, "geofabrics.geometry.MarineBathymetryPoints.x"]], "y (geofabrics.geometry.estimatedbathymetrypoints property)": [[4, "geofabrics.geometry.EstimatedBathymetryPoints.y"]], "y (geofabrics.geometry.marinebathymetrypoints property)": [[4, "geofabrics.geometry.MarineBathymetryPoints.y"]], "z (geofabrics.geometry.estimatedbathymetrypoints property)": [[4, "geofabrics.geometry.EstimatedBathymetryPoints.z"]], "z (geofabrics.geometry.marinebathymetrypoints property)": [[4, "geofabrics.geometry.MarineBathymetryPoints.z"]], "geofabrics": [[5, "module-geofabrics"]], "baseprocessor (class in geofabrics.processor)": [[6, "geofabrics.processor.BaseProcessor"]], "hydrologicdemgenerator (class in geofabrics.processor)": [[6, "geofabrics.processor.HydrologicDemGenerator"]], "measuredrivergenerator (class in geofabrics.processor)": [[6, "geofabrics.processor.MeasuredRiverGenerator"]], "rawlidardemgenerator (class in geofabrics.processor)": [[6, "geofabrics.processor.RawLidarDemGenerator"]], "riverbathymetrygenerator (class in geofabrics.processor)": [[6, "geofabrics.processor.RiverBathymetryGenerator"]], "roughnesslengthgenerator (class in geofabrics.processor)": [[6, "geofabrics.processor.RoughnessLengthGenerator"]], "waterwaybedelevationestimator (class in geofabrics.processor)": [[6, "geofabrics.processor.WaterwayBedElevationEstimator"]], "add_bathymetry() (geofabrics.processor.hydrologicdemgenerator method)": [[6, "geofabrics.processor.HydrologicDemGenerator.add_bathymetry"]], "align_channel() (geofabrics.processor.riverbathymetrygenerator method)": [[6, "geofabrics.processor.RiverBathymetryGenerator.align_channel"]], "align_channel_from_osm() (geofabrics.processor.riverbathymetrygenerator method)": [[6, "geofabrics.processor.RiverBathymetryGenerator.align_channel_from_osm"]], "align_channel_from_rec() (geofabrics.processor.riverbathymetrygenerator method)": [[6, "geofabrics.processor.RiverBathymetryGenerator.align_channel_from_rec"]], "alignment_exists() (geofabrics.processor.riverbathymetrygenerator method)": [[6, "geofabrics.processor.RiverBathymetryGenerator.alignment_exists"]], "calculate_channel_characteristics() (geofabrics.processor.riverbathymetrygenerator method)": [[6, "geofabrics.processor.RiverBathymetryGenerator.calculate_channel_characteristics"]], "calculate_river_bed_elevations() (geofabrics.processor.riverbathymetrygenerator method)": [[6, "geofabrics.processor.RiverBathymetryGenerator.calculate_river_bed_elevations"]], "channel_bathymetry_exist() (geofabrics.processor.riverbathymetrygenerator method)": [[6, "geofabrics.processor.RiverBathymetryGenerator.channel_bathymetry_exist"]], "channel_characteristics_exist() (geofabrics.processor.riverbathymetrygenerator method)": [[6, "geofabrics.processor.RiverBathymetryGenerator.channel_characteristics_exist"]], "characterise_channel() (geofabrics.processor.riverbathymetrygenerator method)": [[6, "geofabrics.processor.RiverBathymetryGenerator.characterise_channel"]], "check_datasets() (geofabrics.processor.baseprocessor method)": [[6, "geofabrics.processor.BaseProcessor.check_datasets"]], "check_instruction_path() (geofabrics.processor.baseprocessor method)": [[6, "geofabrics.processor.BaseProcessor.check_instruction_path"]], "check_vector_or_raster() (geofabrics.processor.baseprocessor method)": [[6, "geofabrics.processor.BaseProcessor.check_vector_or_raster"]], "create_dem() (geofabrics.processor.waterwaybedelevationestimator method)": [[6, "geofabrics.processor.WaterwayBedElevationEstimator.create_dem"]], "create_metadata() (geofabrics.processor.baseprocessor method)": [[6, "geofabrics.processor.BaseProcessor.create_metadata"]], "create_results_folder() (geofabrics.processor.baseprocessor method)": [[6, "geofabrics.processor.BaseProcessor.create_results_folder"]], "download_osm_values() (geofabrics.processor.waterwaybedelevationestimator method)": [[6, "geofabrics.processor.WaterwayBedElevationEstimator.download_osm_values"]], "estimate_closed_elevations() (geofabrics.processor.waterwaybedelevationestimator method)": [[6, "geofabrics.processor.WaterwayBedElevationEstimator.estimate_closed_elevations"]], "estimate_open_elevations() (geofabrics.processor.waterwaybedelevationestimator method)": [[6, "geofabrics.processor.WaterwayBedElevationEstimator.estimate_open_elevations"]], "estimate_river_mouth_fan() (geofabrics.processor.measuredrivergenerator method)": [[6, "geofabrics.processor.MeasuredRiverGenerator.estimate_river_mouth_fan"]], "estimate_river_mouth_fan() (geofabrics.processor.riverbathymetrygenerator method)": [[6, "geofabrics.processor.RiverBathymetryGenerator.estimate_river_mouth_fan"]], "geofabrics.processor": [[6, "module-geofabrics.processor"]], "get_bathymetry_instruction() (geofabrics.processor.riverbathymetrygenerator method)": [[6, "geofabrics.processor.RiverBathymetryGenerator.get_bathymetry_instruction"]], "get_crs() (geofabrics.processor.baseprocessor method)": [[6, "geofabrics.processor.BaseProcessor.get_crs"]], "get_dems() (geofabrics.processor.riverbathymetrygenerator method)": [[6, "geofabrics.processor.RiverBathymetryGenerator.get_dems"]], "get_instruction_general() (geofabrics.processor.baseprocessor method)": [[6, "geofabrics.processor.BaseProcessor.get_instruction_general"]], "get_instruction_path() (geofabrics.processor.baseprocessor method)": [[6, "geofabrics.processor.BaseProcessor.get_instruction_path"]], "get_lidar_dataset_crs() (geofabrics.processor.baseprocessor method)": [[6, "geofabrics.processor.BaseProcessor.get_lidar_dataset_crs"]], "get_lidar_datasets_info() (geofabrics.processor.baseprocessor method)": [[6, "geofabrics.processor.BaseProcessor.get_lidar_datasets_info"]], "get_measured_instruction() (geofabrics.processor.measuredrivergenerator method)": [[6, "geofabrics.processor.MeasuredRiverGenerator.get_measured_instruction"]], "get_network_channel() (geofabrics.processor.riverbathymetrygenerator method)": [[6, "geofabrics.processor.RiverBathymetryGenerator.get_network_channel"]], "get_processing_instructions() (geofabrics.processor.baseprocessor method)": [[6, "geofabrics.processor.BaseProcessor.get_processing_instructions"]], "get_resolution() (geofabrics.processor.baseprocessor method)": [[6, "geofabrics.processor.BaseProcessor.get_resolution"]], "get_result_file_name() (geofabrics.processor.riverbathymetrygenerator method)": [[6, "geofabrics.processor.RiverBathymetryGenerator.get_result_file_name"]], "get_result_file_name() (geofabrics.processor.waterwaybedelevationestimator method)": [[6, "geofabrics.processor.WaterwayBedElevationEstimator.get_result_file_name"]], "get_result_file_path() (geofabrics.processor.riverbathymetrygenerator method)": [[6, "geofabrics.processor.RiverBathymetryGenerator.get_result_file_path"]], "get_result_file_path() (geofabrics.processor.waterwaybedelevationestimator method)": [[6, "geofabrics.processor.WaterwayBedElevationEstimator.get_result_file_path"]], "get_roughness_instruction() (geofabrics.processor.roughnesslengthgenerator method)": [[6, "geofabrics.processor.RoughnessLengthGenerator.get_roughness_instruction"]], "get_vector_or_raster_paths() (geofabrics.processor.baseprocessor method)": [[6, "geofabrics.processor.BaseProcessor.get_vector_or_raster_paths"]], "minimum_elevation_in_polygon() (geofabrics.processor.waterwaybedelevationestimator method)": [[6, "geofabrics.processor.WaterwayBedElevationEstimator.minimum_elevation_in_polygon"]], "run() (geofabrics.processor.baseprocessor method)": [[6, "geofabrics.processor.BaseProcessor.run"]], "run() (geofabrics.processor.hydrologicdemgenerator method)": [[6, "geofabrics.processor.HydrologicDemGenerator.run"]], "run() (geofabrics.processor.measuredrivergenerator method)": [[6, "geofabrics.processor.MeasuredRiverGenerator.run"]], "run() (geofabrics.processor.rawlidardemgenerator method)": [[6, "geofabrics.processor.RawLidarDemGenerator.run"]], "run() (geofabrics.processor.riverbathymetrygenerator method)": [[6, "geofabrics.processor.RiverBathymetryGenerator.run"]], "run() (geofabrics.processor.roughnesslengthgenerator method)": [[6, "geofabrics.processor.RoughnessLengthGenerator.run"]], "run() (geofabrics.processor.waterwaybedelevationestimator method)": [[6, "geofabrics.processor.WaterwayBedElevationEstimator.run"]], "waterway_elevations_exists() (geofabrics.processor.waterwaybedelevationestimator method)": [[6, "geofabrics.processor.WaterwayBedElevationEstimator.waterway_elevations_exists"]], "from_instructions_dict() (in module geofabrics.runner)": [[7, "geofabrics.runner.from_instructions_dict"]], "from_instructions_file() (in module geofabrics.runner)": [[7, "geofabrics.runner.from_instructions_file"]], "geofabrics.runner": [[7, "module-geofabrics.runner"]], "merge_dicts() (in module geofabrics.runner)": [[7, "geofabrics.runner.merge_dicts"]], "run_processor_class() (in module geofabrics.runner)": [[7, "geofabrics.runner.run_processor_class"]], "setup_logging_for_run() (in module geofabrics.runner)": [[7, "geofabrics.runner.setup_logging_for_run"]], "geofabrics.version": [[8, "module-geofabrics.version"]]}})